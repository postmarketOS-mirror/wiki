[https://www.qualcomm.com/products/snapdragon-processors-410 MSM8916]/[https://www.qualcomm.com/products/apq8016e APQ8016] (or Snapdragon 410) is Qualcomm SoC released in 2014. Support in mainline was originally added for the [https://www.96boards.org/product/dragonboard410c/ Dragonboard 410c], but most of it also works well on other MSM8916-based devices.

== Status ==
The following features provided by the MSM8916 SoC are supported in mainline and should work on most MSM8916-based devices after the device tree has been set up:
* UART
* USB
* Internal/External Storage (eMMC/SD card)
* WiFi/Bluetooth
* GPU, Display ('''Note:''' There are many different display panels and each needs a custom panel driver...)
* Sound ('''Note:''' Some devices use a custom speaker amplifier instead of the one provided by PM8916...)
* Buttons

Certain components (e.g. touchscreen, sensors, ...) are device-specific. With a bit of luck, some will be already supported by mainline, others won't.

== Overview ==
The first MSM8916 devices using mainline were added in {{MR|582|pmaports}}. The following components are involved when running mainline on MSM8916 devices.

=== [https://github.com/msm8916-mainline/linux msm8916-mainline/linux] ===
The close-to-mainline [https://www.kernel.org/ Linux] kernel fork with patches that have not been accepted/submitted upstream yet. Patches in the <code>master</code> branch are generally in good shape unless marked otherwise. Submit a PR to add new patches there.

=== [https://github.com/msm8916-mainline/lk2nd msm8916-mainline/lk2nd] ===
The reference bootloader provided by Qualcomm for MSM8916 is open-source and based on [https://github.com/littlekernel/lk Little Kernel (LK)]. Most devices will use this bootloader in a more or less modified form. On Samsung devices for example, the standard Fastboot interface was replaced by their proprietary download mode.

[https://github.com/msm8916-mainline/lk2nd lk2nd] is a fork of the reference bootloader with the goal to provide an unified boot interface on all MSM8916 devices. It provides a standard Fastboot interface (even on Samsung devices!). It also used for a number of mainline quirks (e.g. to set a WiFi/BT MAC address in the device tree; without lk2nd, WiFi/BT does not work out of the box). Eventually, more quirks may be added in the future. It is therefore recommended for all mainline MSM8916 devices. Porting it is generally much easier than porting mainline.

{{note|'''Note:''' lk2nd does not replace your stock bootloader. It is packed into a standard Android boot image and loaded by the stock bootloader from the boot partition. The real boot partition used by lk2nd is then placed with 1 MB offset into the boot partition.}}

=== soc-qcom-msm8916 ===
The shared device package in postmarketOS. It contains shared dependencies and configuration files.

== Getting Started ==
=== Requirements ===
* MSM8916-based device
* UART if possible (with a bit of luck you may get USB working without UART)
* (Downstream) Linux kernel source for your device (explaining ways to mainline without kernel source is out of scope for this article)
* Basic knowledge about Linux, Git, C, Device Trees, ...
* Willingness to learn about "mainlining" and to figure out things on your own

=== Before You Start ===
Mainlining is not easy. MSM8916 is a platform where a lot components can be easily enabled by only setting up a device tree, which can be largely copied from other devices with minor changes. However, at some point you will reach the point where you would like to enable a particular component that is device-specific (e.g. the touchscreen, sensors, ...). In this case you will be largely on your own, and need to figure out how to enable it yourself. (Do you just need to add something to the device tree or even write a new kernel driver?) That requires some familiarity with the way the Linux kernel is working for MSM8916.

The best way to make yourself familiar with the process is to attempt to figure out some simple things on your own. Therefore, this guide will only describe everything until (eventually) USB network is working. For everything else, this article provides only some information that might be helpful to figure it out yourself.

If you have any questions, ask in [[Matrix_and_IRC|the mainline channel on Matrix or IRC]]. Make sure to mention "msm8916" if your question is specific to this article.

=== Preparations ===
First, let's take a short look at the downstream kernel. The device trees on downstream are usually in <code>arch/arm/boot/dts/qcom/msm8916-*.dts(i)</code> (in Samsung kernels: <code>arch/arm/boot/dts/samsung/msm8916/msm8916-*.dts(i)</code>). You need to find the <code>.dts</code> file that describes the device tree for your device. One way to check this is to look at `/proc/device-tree/model` on downstream, and search for the same string in that directory.

Now, let's check how it looks on mainline. Clone [https://github.com/msm8916-mainline/linux msm8916-mainline/linux] and take a look at <code>arch/arm64/boot/dts/qcom/</code>. This is the directory where you will add your device tree later.

=== Porting lk2nd ===
{{note|'''Note:''' lk2nd is not strictly required to boot mainline. However, certain features (e.g. WiFi and BT) only work with some additional mainline quirks included in lk2nd. In the future, there may be more features that depend on extra code that needs to be run in the bootloader. Therefore, lk2nd is recommended for all devices, even if your stock bootloader already provides a standard Fastboot interface.}}

[https://github.com/msm8916-mainline/lk2nd msm8916-mainline/lk2nd] does not require any device-specific code. Normally, it should just run out of the box on your device. However, most stock bootloaders require a valid device tree to be present in the Android boot image. To avoid problems, a dummy device tree with the "qcom,board-id" from the downstream kernel needs to be added to lk2nd.

Before you make any changes, try [https://github.com/msm8916-mainline/lk2nd#building building it]. Then, add a new file for your device to <code>dts/</code> that looks like:

 // SPDX-License-Identifier: GPL-2.0-only
 
 /dts-v1/;
 
 /include/ "msm8916.dtsi"
 
 / {
 	// This is used by the bootloader to find the correct DTB
 	qcom,msm-id = <206 0>; // qcom,msm-id = <247 0>; for APQ8016
 	qcom,board-id = /* Check your downstream device tree */;
 
 	model = "Example Device"; // TODO
 	compatible = "vendor,example", "qcom,msm8916", "lk2nd,device";
 };

Make sure to add the new file to <code>dts/rules.mk</code>, and re-compile lk2nd.

With a bit of luck, flashing the boot image on your device should make it boot into a Fastboot screen, and the device should show up via USB. If either of that is not the case, we need to investigate further. Sometimes, some kind of [[Micro-USB_Interface_Controller]] that sits between USB and the SoC needs to be configured for USB to work. Setting that up would require device-specific code. If you need help, ask in [Matrix_and_IRC|the mainline channel on Matrix or IRC]].

=== Initial Device Tree ===

=== USB Network ===

== Reference ==
{{note|'''Note:''' The following is not intended to be a guide.}}
{{todo|<insert helpful information for WiFi, BT, Display, Sound, ... here>}}

[[Category:Technical Reference]]
