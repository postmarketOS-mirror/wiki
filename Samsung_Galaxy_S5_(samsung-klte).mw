{{Infobox device
| manufacturer = Samsung
| name = Galaxy S5
| codename = samsung-klte
| image = File:Samsung-s5-weston.jpg
| imagecaption = Samsung Galaxy S5
| releaseyear = 2014
| originalsoftware = Android 4.4.2 (KitKat)
| chipset = Qualcomm MSM8974PRO-AC Snapdragon 801
| cpu = Quad-core 2.5 GHz Krait 400
| gpu = Adreno 330
| storage = 16/32 GB
| display = 1080 x 1920 AMOLED
| memory = 2 GB
| architecture = armv7
| status_usbnet = Y
| status_flashing = Y
| status_touch = Y
| status_screen = Y
| status_wifi = Y
| status_xwayland = Y
| status_fde = 
| status_mainline = P
| status_battery = Y
| status_3d = P
| status_accel = Y
| status_audio = Y
| status_bluetooth = N
| status_camera =
| status_gps = Y
| status_mobiledata = 
| status_sms = 
| status_calls = 
| booting = yes
}}

== Contributors ==
* ''[[user:drebrez|drebrez]]''
* ''[[user:alexeymin|Alexey Min]]''

== Maintainer(s) ==
* none

== Users owning this device ==
{{Device owners}}

== What works ==

* Flash Kernel (<code>pmbootstrap flasher flash_kernel</code>)
* Flash Rootfs (<code>pmbootstrap flasher flash_rootfs</code>)
* Initramfs boot
* USB Network
* Framebuffer graphics (Splash screens)
* SSH Connectivity
* Touchscreen
* Wi-Fi
* Xwayland
* Weston on framebuffer [broken with latest weston]
* Plasma Mobile on framebuffer [untested with last update]
* X11 based UIs on framebuffer work fine
* Android container starts
* audio works with nonfree-userland (with Android container)

== What does not work ==

* Audio playback without nonfree-userland
* Bluetooth adapter is visible in rfkill list, but does not work
* Everything else

== How to enter flash mode ==

Press and hold {{button|Volume Down}} + {{button|Home}} + {{button|Power}} simultaneously. Then click {{button|Volume Up}} to confirm.

== How to enter recovery mode ==

Press and hold <code>Volume Up</code> + <code>Home</code> + <code>Power</code> simultaneously.

== Installation ==
First, [[Installing_pmbootstrap|install pmbootstrap]].

Setup device to be used:
<source lang="shell-session">
$ pmbootstrap init
...
Device [samsung-i9100]: samsung-klte   <- enter this
Kernel [downstream]: downstream        <- you probably want downstream for now
User interface [weston]:               <- choose any UI by your preference
...
</source>

Build the rootfs image:
<source lang="shell-session">
$ pmbootstrap install
</source>

Then in order to flash it put your device in download mode, and plug it in USB. Then do:

<source lang="shell-session">
$ pmbootstrap flasher flash_rootfs

 Hold "Volume down" + "Home" buttons at the end of the process,
 so that when phone reboots put it in flashing mode again 

$ pmbootstrap flasher flash_kernel

 This time, don't hold any button, let it reboot to Linux!
</source>

=== Nonfree-userland (halium) installation ===

[[File:Samsung-klte-android-running-inside-lxc-cut.png|400px|thumb|right|Android processes running inside lxc container]]

To make full use of nonfree-userland intallation, which involves running Android in lxc container to make all hardware work (read more at [[Hybris]] wiki page), you need to to '''manually'''  download and install custom device-specific Android/Halium system image. Building it manually takes a lot of time and free space on HDD, so I've prepared prebuilt image: https://androidfilehost.com/?fid=6006931924117913010

You need to download it, un-sparse and place in to root of userdata partition:

Un-sparse:
<source lang="shell-session">
$ simg2img halium-klte-2019-07-09-system.img halium-klte-2019-07-09-system.img.raw
</source>
If it says "invalid sparse format or header magic" it means that the image is already unsparsed. Proceed to next step

Reboot phone to TWRP recovery and push image using ADB:
<source lang="shell-session">
$ adb push halium-klte-2019-07-09-system.img.raw /data/system.img
</source>

Boot to a running postmarketOS system and login with SSH using [[USB_Network]]. Next command is executed on the phone. Make sure that you have a /data mounted (check output of <code>mount</code> command) and make symlink to system.img in <code>/var/lib/lxc/android</code>:

<source lang="shell-session">
$ sudo ln -sf /data/system.img /var/lib/lxc/android/system.img
</source>

After that lxc-android service should start fine (<code>sudo rc-service lxc-android restart</code>). Before (re)starting lxc-android, remove file <code>/tmp/lxc-android-once</code> if it exists.

Ensure that Android is fully running inside an lxc container (on device, install <code>htop</code>, run it and switch into tree mode by pressing '''t''') (see the picture on the right)

Another way is to run '''logcat''' and see if it is printing some logs on the screen. If you see logs, then you lxc-android is running fine.

== Additional info ==

=== Useful helper scripts ===
Default installation includes a couple of useful scripts to be used from a terminal: <code>battery-status</code> and <code>set-brightness</code>. <code>battery-status</code> allows you to check for battery charge level, and <code>set-brightness</code> allows to view/set lcd backlight brightness in range 0-255.
<pre>
samsung-klte:~$ battery-status 
25
samsung-klte:~$ set-brightness 
255
samsung-klte:~$ sudo set-brightness 20
20
</pre>

=== Partition layout ===

<pre class="shell">~ # fdisk -l /dev/block/mmcblk0
Found valid GPT with protective MBR; using GPT

Disk /dev/block/mmcblk0: 30777344 sectors, 2740M
Logical sector size: 512
Disk identifier (GUID): 98101b32-bbe2-4bf2-a06e-2bb33d000c20
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 30777310

Number  Start (sector)    End (sector)  Size       Code  Name
   1            8192           38911       15.0M   0700  apnhlos
   2           38912          156543       57.4M   0700  modem
   3          156544          157567        512K   0700  sbl1
   4          157568          157695       65536   0700  dbi
   5          157696          157759       32768   0700  ddr
   6          157760          161855       2048K   0700  aboot
   7          161856          162879        512K   0700  rpm
   8          162880          163903        512K   0700  tz
   9          163904          170047       3072K   0700  fsg
  10          170048          184319       7136K   0700  pad
  11          184320          204799       10.0M   0700  param
  12          204800          233471       14.0M   0700  efs
  13          233472          239615       3072K   0700  modemst1
  14          239616          245759       3072K   0700  modemst2
  15          245760          272383       13.0M   0700  boot
  16          272384          303103       15.0M   0700  recovery
  17          303104          329727       13.0M   0700  fota
  18          329728          344045       7159K   0700  backup
  19          344046          344047        1024   0700  fsc
  20          344048          344063        8192   0700  ssd
  21          344064          360447       8192K   0700  persist
  22          360448          378879       9216K   0700  persdata
  23          378880         5498879       2500M   0700  system
  24         5498880         5908479        200M   0700  cache
  25         5908480         6010879       50.0M   0700  hidden
  26         6010880        30777310       11.8G   0700  userdata</pre>

== Component support table ==

{| class="wikitable"
|-
 ! Component !! Codename !! Mainline kernel !! Since when !! Downstream 3.4 kernel
|-
| Debug serial || /dev/ttyMSM0 || Working || v4.17-rc1 || yes, /dev/ttyHSL0
|-
| Volume &amp; home buttons || gpio-keys || Working || locally || yes
|-
| Regulator nodes || pma8084 || Working || locally || yes
|-
| Internal storage || sdhci1 || Working || locally || yes
|-
| SD card storage || sdhci2 || Not working || || yes
|-
| USB Networking ||  || Working || || yes
|-
| Display ||  || Not working || || yes
|-
| Touchscreen  ||  || Not working || || yes
|-
| Vibration motor ||  || Not working || || yes
|-
| Notification LED ||  || Not working || || yes
|-
| WiFi ||  || Not working || || yes
|-
| Bluetooth ||  || Not working || || unknown
|-
| GPU ||  || Not working || || worked with libhybris, currently broken
|-
| Audio ||  || Not working || || with libhybris
|-
| Modem ||  || Not working || || no
|-
| Sensors ||  || Not working || || yes
|}

== Links ==
postmarketOS packages:
* [https://gitlab.com/postmarketOS/pmaports/tree/master/device/device-samsung-klte Device package]
* [https://gitlab.com/postmarketOS/pmaports/tree/master/device/linux-samsung-klte Kernel package]
* [https://gitlab.com/postmarketOS/pmaports/tree/master/firmware/firmware-samsung-klte Firmware package]

Mainline kernel patches:
* https://patchwork.kernel.org/patch/10150807/

Development branch:
* https://gitlab.com/postmarketOS/linux-postmarketos/tree/old-4.17.0-rc3/qcom , old 4.17 kernel, commits by ''drebrez''
* https://github.com/drebrez/linux/tree/samsung-klte (old repo)

Extra:
* [https://www.gsmarena.com/samsung_galaxy_s5-6033.php Full phone specifications]
* [https://www.ifixit.com/Teardown/Samsung+Galaxy+S5+Teardown/24016 Samsung Galaxy S5 Teardown]
* [https://forum.xda-developers.com/galaxy-s7/how-to/guide-samsung-galaxy-s7-uart-t3743895 UART guide]
* [https://www.youtube.com/watch?v=v0iI0p6qKKw Demo of Samsung klte running Plasma Mobile]
* [https://www.youtube.com/watch?v=1kXpkorNCik Plasma Mobile Kirigami Gallery demo on samsung-klte]

== Photos ==
<gallery>
File:Klte weston.jpg|thumb|left|Weston
File:Klte xfce.jpg|thumb|left|Xfce4 UI
File:Samsung debug UART.png|thumb|left|UART debugging
File:IMG_20190715_185026.jpg|thumb|left|Plasma Mobile homescreen
File:Klte_plamo_top_panel_wifi.jpg|thumb|left|Plasma Mobile top panel
File:Samsung_klte_PlaMo_Index_FM.jpg|thumb|left|Plasma Mobile Index file manager
File:Samsung-klte-x2.jpg|thumb|left|klte x2
File:Samsung-klte-android-running-inside-lxc-cut.png|thumb|left|Android processes running inside lxc container
</gallery>
