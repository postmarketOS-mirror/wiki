{{Infobox interface
| name = Hildon
| image = File:Hildon.png
| imagecaption = Hildon running in QEMU
| graphics = X11
| toolkit = GTK+2, [https://talk.maemo.org/showthread.php?t=96800 WIP: GTK+3]
}}

This is the desktop from Maemo, which is a Debian-based distribution, that originally ran on the N900.<br />
We do not have a <code>postmarketos-ui-hildon</code> yet (but that should be easy to make, look at <code>postmarketos-ui-weston</code> for reference if you're interested, dear reader).

=== Installation instructions ===

In <code>pmbootstrap init</code>, select <code>hildon</code> as user interface, then do the installation as usually. When running postmarketOS, it should boot automatically into Hildon now!

=== Running ===
{{note|These instructions are outdated, as we have <code>postmarketos-ui-hildon</code> now. Please adjust as necessary, then remove this note.}}

hildon-desktop can be run in a horizontal view only so create a <code>~/.xinitrc</code> with the following contents:

<pre>
if which dbus-launch >/dev/null && test -z "$DBUS_SESSION_BUS_ADDRESS"; then
    eval `dbus-launch --sh-syntax --exit-with-session`
fi
export LC_MESSAGES=en_US.UTF-8
xrandr -o left
xinput set-prop 'Your touchscreen name' 'Coordinate Transformation Matrix' 0 -1 1 1 0 0 0 0 1
exec hildon-desktop
</pre>
'Your touchscreen name' should be your touchscreen name. You can find out your touchscreen name by running <code>sudo libinput list-devices</code>. hildon-desktop can then be started by running <code>startx</code>. To run programs you need to <code>export DISPLAY=:0</code>. To set it by default edit <code>sudo nano /etc/profile</code>.

=== Rotate screen when using ''fbdev'' driver ===

In order to rotate the screen when using the framebuffer, you need to create this file:

'''/etc/X11/xorg.conf.d/1-fbdev.conf'''
<pre>
Section "Device"
  Identifier "LCD"
  Driver "fbdev"
  Option "Rotate" "CW"
EndSection
</pre>

reference: https://www.x.org/archive//X11R6.8.0/doc/fbdev.4.html

=== WIP: Possible fix for performance problems ===
Hildon renders everything on the GPU, which is terribly slow when we have to resort to software rendering. At least on the N900 it looks like a slideshow. The GTK+3 version won't improve this, as it also uses Clutter for rendering. However, we should be able to improve the situation by replacing the OpenGL stuff, that mesa currently handles, with a faster software implementation from [https://github.com/lunixbochs/tinygles TinyGLES] and related libraries.

<pre>
Current stack:
(hardware) - mesa - cogl - clutter - hildon

New stack:
(hardware) - tinygles - glshim - cogl - clutter - hildon
</pre>

It makes sense to run cogl demos with tinygles before trying anything hildon or clutter related, as Clutter depends on cogl.

More information:
* [https://github.com/lunixbochs/glshim glshim]
* [https://github.com/lunixbochs/tinygles/issues/9 Asking upstream if this is possible]
* [https://github.com/lunixbochs/tinygles/issues/10 Unable to run hildon-desktop: Failed to create texture 2d due to size/format constraints]
* [https://pyra-handheld.com/boards/threads/glshim.69736/ Pandora thread about glshim] (contains debug environment variables etc!)

=== See also ===

* https://github.com/postmarketOS/pmbootstrap/pull/461 (initial PR by NotKit with a screenshot running in Qemu)
* https://github.com/fremantle-gtk3 (GTK+3 port, which we could package in the future)
