Running a benchmark:

<source lang="shell-session">
$ sudo ubench whets dhry
make all
make[1]: Entering directory '/usr/share/unixbench'
Checking distribution of files
./pgms  exists
./src  exists
./testdir  exists
make[1]: Leaving directory '/usr/share/unixbench'
Checking distribution of files
./pgms  exists
./src  exists
./testdir  exists
...snip...
========================================================================
   BYTE UNIX Benchmarks (Version 5.1.3)

   System: motorola-cedric: Linux
   OS: Linux -- 3.18.113-lineage -- #1-postmarketOS SMP PREEMPT Sun Jan 20 14:20:57 UTC 2019
   Machine: aarch64 (unknown)
   Language: en_US.utf8 (charmap=, collate=)
   18:41:30 up 18 min,  load average: 4.60, 4.53, 3.30; runlevel 

------------------------------------------------------------------------
Benchmark Run: Sun Jan 20 2019 18:41:30 - 18:46:19
...results here...
</source>

If unixbench mentions <code>0 CPUs in system; running 1 parallel copy of tests</code> then it couldn't correctly find the number of cpu's in /proc/cpuinfo.
In that case you can override the number of cores with an environment variable:

<source lang="shell-session">
$ sudo NUMBER_OF_PROCESSORS=4 ubench whets dhry
... benchmark runs ...
</source>

[[Category:Guide]]

== Benchmark results ==

{{#cargo_query:
tables=Devices
|fields=CONCAT( '[[', _pageName, '|',Manufacturer,' ',Name,']]' )=Device,Codename,Chipset,CPU,Architecture,WhetDhry=Score
|order by=Devices.WhetDhry DESC
|format=table
|limit=9999
|where=Devices.Booting = 1 and WhetDhry > 1
|more results text=
}}
