1. Go to the pmbootstrap packages dir and start a web server:

<syntaxhighlight lang="shell-session">
$ cd ~/.local/var/pmbootstrap/packages
$ python3 -m http.server
</syntaxhighlight>

2. Add your own repository on top of your <code>/etc/apk/repositories</code> file on the phone (remember to adjust the IP):

<source lang="shell">
# Add your host machine address
http://172.16.42.2:8000
    
https://nl.alpinelinux.org/alpine/edge/main
https://nl.alpinelinux.org/alpine/edge/community
https://nl.alpinelinux.org/alpine/edge/testing
</source>

3. Upgrade the package you have built with <code>apk upgrade [package name]</code>

If you get <code>UNTRUSTED signature</code> and you trust your LAN, then you may consider <code>apk upgrade --allow-untrusted [package name]</code>. Beware of the security implications that <code>--allow-untrusted</code> has.

4. '''Note:''' If you are upgrading a kernel package, the new Android boot image is not automatically flashed to the boot partition at the moment. If you are booting the flashed image (i.e. not using <code>pmbootstrap flasher boot</code> you'll need to call <code>pmos-update-kernel</code>.

The apk hosting this command is called <code>postmarketos-update-kernel</code>. Then you need to figure out the name of your kernel flavor. Run <code>ls /boot/boot.img-*</code>. Whatever is after the dash, that is your kernel flavor. So

<source lang="shell">
$ ls /boot/boot.img-*
/boot/boot.img-postmarketos-qcom-msm8974
# your kernel flavor is postmarketos-qcom-msm8974
$ sudo pmos-update-kernel postmarketos-qcom-msm8974
</source>


== Updating your kernel from a running phone ==

If you're experimenting with mainline kernel and adding new features you might end up wanting to update your kernel and restart your phone very often. On the kernel building end you can use [[envkernel.sh]] + <code>pmbootstrap build --envkernel MAINLINE_LINUX_PACKAGE_NAME</code>. That will produce a fresh new kernel package with the changes you made. Then you need to install that package to the phone.

After you execute steps 1 and 2 above, install postmarketos-update-kernel, and find your kernel flavor, you can run the following script:

<source lang="shell">
#!/bin/sh

set -e # errors are critical -- will end script immediately
set -x # echo executed commands
sudo apk --allow-untrusted update                    # update package info
sudo apk --allow-untrusted upgrade                   # upgrade all new packages (most likely kernel)
sudo pmos-update-kernel postmarketos-qcom-msm8974    # make sure new kernel is selected after reboot
set +x

echo -n 'reboot [yN]? '                              # prompt for restart 
read ans
test "$ans" = 'y' && sudo reboot
</source>

[[Category:Guide]]
