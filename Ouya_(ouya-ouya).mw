{{Infobox device
| manufacturer = Ouya, Inc.
| name = Ouya
| codename = ouya_1_1
| image = File:Ouya-9.jpg
| imagecaption = Ouya
| releaseyear = 2013
| originalsoftware = Android
| chipset = Nvidia Tegra 3
| cpu = Quad-core 1.7 GHz Cortex-A9
| gpu = Nvidia GeForce ULP<br/>520 MHz (12.48 GFLOPS)
| storage = 8/16 GB
| display = 1x HDMI
| memory = 1 GB
| architecture = armhf
| status_usbnet = Y
| status_flashing = P
| status_touch = -
| status_screen = -
| status_wifi = 
| status_xwayland = Y
| status_fde = P
| status_mainline = 
| status_battery = -
| status_3d = 
| status_accel = -
| status_audio = 
| status_bluetooth =
| status_camera = -
| status_gps = 
| status_mobiledata = -
| status_sms = -
| status_calls = -
| status = Requires irregular install script and then can be merged.
| booting = no
}}

== Contributors ==
* rendeko
* ollieparanoid

== Maintainer(s) ==
* rendeko

== Development Notes ==
Issue: [https://gitlab.com/rendeko/pmaports/issues/1 device-mapper invalid argument]

===Radio===
* The Ouya uses a BCM4330 radio chip for wifi and bluetooth. Drivers for this chip is built into the linux mainline as of 3.3 and the kernel we use uses 3.1 with the driver support (presumably) backported. Otherwise, we can use the Android binaries (which would be non-free). 

* Two later releases (the completely white special edition and completely black 2nd generation) [https://www.s-config.com/cyanogen-mod-and-the-ouya/ allegedly use a BCM4334 chipset.] This needs to be implemented and tested at a future date.

===Kernel===
* Currently we avoid flashing directly to the device as  [https://www.reddit.com/r/ouya/comments/5i02u4/ouya_dead_apx_mode/dcvlyts/ a corrupted kernel would irreversibly brick the Ouya due to the locked bootloader.] We use a tool called [https://forum.xda-developers.com/showthread.php?t=2692836 Ouya BootMenu] [https://github.com/milaq/ouya_bootmenu (source)] that allows us to run the postmarketOS kernel through a kexec method. This implements an extra failsafe to prevent bricking and in theory allows dualbooting and kernel development.

== Installation ==
=== How to enter flash mode ===
# Connect Ouya to PC
# Use <code>adb reboot recovery</code> to enter recovery (or <code>adb reboot bootloader</code> to enter bootloader for fastboot commands)
===pmbootstrap===
'''Work in progress. Only attempt for development.'''

1. Flash  [https://forum.xda-developers.com/showthread.php?t=2295645 CWM] and [https://forum.xda-developers.com/showthread.php?t=2692836 Ouya BootMenu] using fastboot.
<pre class="shell">
</pre>


2. Turn your Ouya on and wait until you see the new Ouya BootMenu. Press the power button on your Ouya until you scroll to Bootloader, and then wait until the bootmenu disappears.

3. Run the following using pmbootstrap
<pre class="shell">
pmbootstrap init

pmbootstrap install --no-fde

pmbootstrap flasher flash_rootfs
</pre>

4. Transfer the kernel file from your computer to the Ouya after the bootmenu.
<pre class="shell">
</pre>

5. Reboot your Ouya, pmbootstrap should start automatically.

== Photos ==

== Links ==
* [https://forum.xda-developers.com/showthread.php?t=2692836 Ouya BootMenu] [https://github.com/milaq/ouya_bootmenu (source)]
* [https://forum.xda-developers.com/showthread.php?t=2295645 CWM]
* [https://www.s-config.com/cyanogen-mod-and-the-ouya/ CyanogenMod documentation blog]
