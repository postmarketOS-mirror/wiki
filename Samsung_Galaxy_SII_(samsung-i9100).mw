[[Category:Supported Devices]]
[[Category:Devices]]
{{Infobox device
| manufacturer = Samsung
| name = Galaxy S II
| codename = i9100, d710
| image = File:Samsung-i9100-weston.jpg
| imagecaption = First photo ever released of postmarketOS (from the original [https://ollieparanoid.github.io/post/postmarketOS/ introduction post]).
| releaseyear = 2011
| originalsoftware = Android 2.3.4
| cpu = Dual-core 1.2 GHz Cortex-A9
| gpu = Mali-400MP4
| storage = 16/32 GB
| display = 480x800 AMOLED
| memory = 1 GB RAM
}}
=== Contributors ===

* ollieparanoid
* veggie

=== What works ===

* Installation to sdcard (<code>pmbootstrap install --sdcard=/dev/mmcblk...</code>)
* Installation to device memory (partial)
* Touchscreen
* Weston (only on SD card)
* XWayland

=== What does not work ===

* The rest (Wifi, bluetooth, making calls, ...)
* Auto resizing partitions during installation to device memory (probably)

=== How to enter flash mode ===

'''For i9100'''
* Connect a USB cable
* Make sure, the device is powered off
* Hold power + Home + volume down
* When prompted, release all buttons and press volume up

'''For d710'''
* Connect a USB cable
* Make sure, the device is powered off
* Hold power + Home + volume down
* When prompted, release all buttons and press volume up

=== Installation ===

Flashing to device memory uses [https://github.com/postmarketOS/pmbootstrap/issues/456 drebrez's netcat method (#456)].

Init pmbootstrap. Make sure to choose ''none'' for the user interface instead of ''weston'' because ''weston'' makes the image just a little bit too large for the unresized partition.

<source lang="shell">$ ./pmbootstrap.py init</source>

Start the build process

<source lang="shell">$ ./pmbootstrap.py install</source>

Flash postmarketOS to the device:

https://github.com/postmarketOS/pmbootstrap/issues/456

For the d710, on step 5 use ''/dev/mmcblk0p11'' as the install partition.

On step 8, use <source lang="shell">pv /home/user/rootfs/samsung-i9100.img | nc 172.16.42.1 60000</source> instead.

==== Step by step guide for Flashing to device memory ====

''Please do not hesitate to remove or edit if this does not belong here or match intended wiki content. This does not bring anything new just summary.''

- Build image (on your computer)

-- Install pmboostrap

  $ git clone https://github.com/postmarketOS/pmbootstrap.git

-- Change working directory to the pmboostrap

  $ cd pmbootstrap/

-- Configure

  $ ./pmbootstrap.py init
  [18:27:09] Device [samsung-i9100]: samsung-i9100
  [18:27:45] User interface [weston]: weston
  [18:28:05] Work path [/home/<USER>/.local/var/pmbootstrap]:
  [18:28:29] Jobs [5]:
  [18:28:46] Timestamp based rebuilds (y/n) [y]:
  [18:29:05] Extra packages [none]:

-- Build device package

  $ ./pmbootstrap.py build device-samsung-i9100

-- Build device kernel

  $ ./pmbootstrap.py build linux-samsung-i9100

-- Prepapre the installation

  $ ./pmbootstrap.py install

- Flash to phone memory - This will replace (break) your current phone system!
The description is using the alternative flash method because there it did not work for me with heimdall - https://github.com/Benjamin-Dobell/Heimdall/issues/418

-- Set phone to ODIN mode

  1. Turn off phone
  2. Connect USB cable
  3. Hold VOLUME_DOWN + HOME + POWER until you get Warning!! screen
  4. Push VOLUME_UP to continue to ODIN mode screen

-- Set image for NETCAT flash method

  $ ./pmbootstrap.py initfs hook_add usb-shell

-- Flash Kernel and Recovery (phone will reboot to screen with postmarketOS logo)

  $ ./pmbootstrap.py flasher flash_kernel

-- Connect to phone with telnet

  $ telnet 172.16.42.1 24

-- Start netcat to listen for image (on the phone)
''/dev/mmcblk0p9 should be FACTORYFS partition you check by running fdisk -l /dev/mmcblk0''

  / # nc -v -l -p 60000 > /dev/mmcblk0p9

-- Switch to pmboostrap chroot (on the computer in other terminal)

  $ ./pmbootstrap.py chroot --suffix native

-- Install pv (in the chroot)

  / # apk add pv

-- Send image from computer to netcat (on the computer)

  / # pv /home/user/rootfs/samsung-i9100.img | nc 172.16.42.1 60000

-- Close both nc with CTRL+C when transfer finishes

-- Telnet to phone to enter password

  $ telnet 172.16.42.1

-- Follow further instructions from telnet

=== Boot process ===

We're using the <code>heimdall-isorec</code> flash method, see [[deviceinfo_flash_methods]] for more information.

=== Links ===

* [https://github.com/postmarketOS/pmbootstrap/tree/master/aports/device/device-samsung-i9100 Device package]
* [https://github.com/postmarketOS/pmbootstrap/issues/456 netcat installation method]

=== Photos ===

* [https://ollieparanoid.github.io/img/2017-05-26/i9100/telnet.jpg Initramfs asking for the password via telnet]
* [https://ollieparanoid.github.io/img/2017-05-26/i9100/filled.jpg Weston with various programs opened]
* [https://ollieparanoid.github.io/img/2017-05-26/i9100/demos.jpg postmarketOS demo menu (XWayland)]
* [https://ollieparanoid.github.io/img/2017-05-26/i9100/firefox.jpg Firefox (XWayland)]
* [https://ollieparanoid.github.io/img/2017-05-26/i9100/smoke.jpg Weston-smoke demo]
* [https://wiki.postmarketos.org/wiki/File:Samsung-d710.jpg Weston-smoke demo running on a d710]

=== Wifi ===

''Please edit this to match the style of wiki.''

I got wifi working on gt-i9100 with following procedure:

- Created path /system/etc/wifi

mkdir -p /system/etc/wifi

- Downloaded firmware files from https://github.com/TheMuppets/proprietary_vendor_samsung/tree/cm-14.1/i9100/proprietary/system/etc/wifi and saved to /system/etc/wifi

- Rebooted phone

reboot

- Created conf for wpa_supplicant

$ wpa_passphrase "SSID" "password" > wifi

- connect to wifi AP

$ sudo wpa_supplicant -i wlan0 -c wifi

- get ip address from dhcp server

$ sudo udhcpc -i wlan0

PR (https://github.com/postmarketOS/pmbootstrap/pull/514) to include necessary firmware. Not yet properly tested. 

=== Modem ===

==== Links ====

https://forum.xda-developers.com/galaxy-s2/help/how-to-talk-to-modem-commands-t1471241

https://github.com/astarasikov/samsung-xmm6260-fw-loader

https://forum.xda-developers.com/showpost.php?p=22218364&postcount=14

http://ksyslabs.org/sgnx/

==== Progress so far ====

- build libsamsung-ipc (see https://github.com/postmarketOS/pmbootstrap/pull/522)

  $ ./pmbootstrap.py build libsamsung-ipc --arch=armhf

- install on phone (you need wifi working to download dependencies (libcrypto))

  localhost:~# apk add libsamsung-ipc-6.0-0002-r0.apk

- symlink for partition with modem firmware

  localhost:/dev/block# ln -s ../mmcblk0p8

- mount EFS

  localhost:/# mkdir /efs
  localhost:/# mount /dev/mmcblk0p1 /efs

- run ipc-test

  localhost:~# ipc-test 
  [ipc] Starting galaxys2 modem boot
  [ipc] Opened modem image device
  [ipc] Mapped modem image data to memory
  [ipc] Opened modem boot device
  [ipc] Opened modem link device
  [ipc] Turned the modem off
  [ipc] Turned the modem on
  [ipc] Waited for link connected
  [ipc] Wrote ATAT in ASCII
  [ipc] Read chip id (0x16)
  [ipc] Wrote PSI header
  [ipc] Wrote PSI, CRC is 0x20
  [ipc] Wrote PSI CRC (0x20)
  [ipc] Read PSI CRC ACK
  [ipc] Read PSI ACK
  [ipc] Sent XMM626 HSIC PSI
  [ipc] Wrote EBL size
  [ipc] Wrote EBL, CRC is 0xbc
  [ipc] Wrote EBL CRC (0xbc)
  [ipc] Sent XMM626 HSIC EBL
  [ipc] Read port config
  [ipc] Sent XMM626 HSIC port config
  [ipc] Sent XMM626 HSIC SEC start
  [ipc] Sent XMM626 HSIC firmware
  [ipc] Checked nv_data path
  [ipc] Checked nv_data md5 path
  [ipc] Calculated nv_data md5: 053556cad766c6976840c5ec34f05151
  [ipc] Read nv_data md5: 053556cad766c6976840c5ec34f05151
  [ipc] Checked nv_data backup path
  [ipc] Loaded nv_data
  [ipc] Sent XMM626 HSIC nv_data
  [ipc] Sent XMM626 HSIC SEC end
  [ipc] Sent XMM626 HSIC HW reset
  [ipc] Waiting for host wake failed
  [ipc] Waited for host wake
  [ipc] Waited for link connected
  [ipc] 
  [ipc] xmm626_sec_modem_fmt_recv: Received FMT message
  [ipc] xmm626_sec_modem_fmt_recv: Message: aseq=0xff, command=IPC_PWR_PHONE_PWR_UP, type=IPC_TYPE_NOTI, size=0
  [ipc] 
  [ipc] xmm626_sec_modem_fmt_recv: Received FMT message
  [ipc] xmm626_sec_modem_fmt_recv: Message: aseq=0x00, command=IPC_MISC_ME_IMSI, type=IPC_TYPE_NOTI, size=16
  [ipc] 
  [ipc] xmm626_sec_modem_fmt_recv: Received FMT message
  [ipc] xmm626_sec_modem_fmt_recv: Message: aseq=0x00, command=IPC_SEC_SIM_ICC_TYPE, type=IPC_TYPE_NOTI, size=1
  [ipc] 
  [ipc] xmm626_sec_modem_fmt_recv: Received FMT message
  [ipc] xmm626_sec_modem_fmt_recv: Message: aseq=0x00, command=IPC_SEC_PIN_STATUS, type=IPC_TYPE_NOTI, size=2
  [ipc] 
  [ipc] xmm626_sec_modem_fmt_recv: Received FMT message
  [ipc] xmm626_sec_modem_fmt_recv: Message: aseq=0xff, command=IPC_NET_REGIST, type=IPC_TYPE_NOTI, size=11

- run ipc-modem

  localhost:~# ipc-modem start --pin=XXXX
  [I] Got SIM PIN!
  [0] Starting modem on FMT client
  [1] Starting modem_read_loop on FMT client
  [2] Phone is powered up (LPM)!
  [I] SIM card found
  [I] We need the PIN1 to unlock the card!
  [I] Sending PIN1 unlock request
  [3] SIM init complete
  [4] Modem is ready, requesting normal power mode
  [I] SIM card found
  [3] SIM init complete
  [5] Modem is fully ready
  [I] SIM Phone Book init complete
  [6] Registered with network! Got PLMN (Mobile Network Code): '@65@5'
  [6] Registered with network! Got PLMN (Mobile Network Code): '21902'
  [6] Registered with network! Got PLMN (Mobile Network Code): '21902'
