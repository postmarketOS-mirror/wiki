Presently, the kernel from Lineage OS can be compiled, but it does not boot...

== Sonly Xperia L specifications ==

* Screen resolution : 480 x 854 pixels
* Chipset : Qualcomm MSM8230 Snapdragon 400

== Kernel compilation ==

The kernel used comes from Lineage OS. The kernel version is '''3.4.0'''.

The ''android_device_sony_taoshan'' github repository contains a file named ''lineage.dependencies'' witch indicates the name of the kernel used : ''android_kernel_sony_msm8930''.

* [https://github.com/LineageOS/android_device_sony_taoshan XPeria L Github repository]
* [https://github.com/LineageOS/android_kernel_sony_msm8930 kernel Github repository]
* [https://raw.githubusercontent.com/LineageOS/android_kernel_sony_msm8930/cm-14.1/arch/arm/configs/taoshan_defconfig Taoshan kernel configuration file on msm8930 Github repository]

The patch [[https://github.com/postmarketOS/pmbootstrap/blob/master/aports/device/linux-lg-mako/02_gpu-msm-fix-gcc5-compile.patch  gpu-msm-fix-gcc5-compile.patch]] is necessary to fix the following error : ''undefined reference to kgsl_iommu_sync_lock''.

The screen resolution must be updated in the <code>device-sony-taoshan/deviceinfo</code> file : 
<pre>
deviceinfo_screen_width="854"
deviceinfo_screen_height="480"
</pre>


=== XZ compression error ===

By default, the kernel compilation (<code>pmbootstrap build linux-sony-taoshan</code>) fails with the following error in the log : 
<pre>
  AS      arch/arm/boot/compressed/ashldi3.o
/home/pmos/build/src/android_kernel_sony_msm8930-df6292bc628cece5925d0f67fbc8c8a2cab2d524/scripts/xz_wrap.sh: exec: line 23: xz: not found
make[2]: *** [/home/pmos/build/src/android_kernel_sony_msm8930-df6292bc628cece5925d0f67fbc8c8a2cab2d524/arch/arm/boot/compressed/Makefile:190: arch/arm/boot/compressed/piggy.xzkern] Error 1
make[2]: *** Waiting for unfinished jobs....
make[1]: *** [/home/pmos/build/src/android_kernel_sony_msm8930-df6292bc628cece5925d0f67fbc8c8a2cab2d524/arch/arm/boot/Makefile:52: arch/arm/boot/compressed/vmlinux] Error 2
make: *** [/home/pmos/build/src/android_kernel_sony_msm8930-df6292bc628cece5925d0f67fbc8c8a2cab2d524/arch/arm/Makefile:292: zImage] Error 2
>>> ERROR: linux-sony-taoshan: build failed
</pre>

'''Explanation :''' The kernel compilation needs the '''xz''' utility to build the kernel because the original taoshan kernel configuration file (from Lineage OS) has the <code>CONFIG_KERNEL_XZ</code> option enabled and ''pmbootstrap'' did not install this utility when installing the Alpine OS base.

The first solution is to add ''xz'' in the <code>makedepends</code> directive of the <code>linux-sony-taoshan/APKBUILD</code> file  : 
<pre>
  makedepends="perl sed installkernel bash gmp-dev bc linux-headers elfutils-dev devicepkg-dev xz" 
</pre>
Then you must clear all caches with <code>pmboostrap zap</code> and restart a new compilation.

The second solution is to choose another compression mode. To do that, run <code>pmbootstrap kconfig edit sony-taoshan</code>, go in the menu "'''General setup'''" and select ''GZIP'' for the "'''Kernel compression mode'''" option.

With this two methods, the kernel compilation is successfull, but the phone does not boot...

== Unpacking boot.img and non-standard warning ==

The Juisma's unmkbootimg utility prints a warning message indicating that the '''OFF_RAMDISK_ADDR''' is non-standard :

<pre>
Boot = boot.img
unmkbootimg version 1.2 - Mikael Q Kuisma <kuisma@ping.se>
Kernel size 5847800
Kernel address 0x80208000
Ramdisk size 7421021
Ramdisk address 0x82200000
Secondary size 0
Secondary address 0x81100000
Kernel tags address 0x80200100
Flash page size 2048
Board name is ""
Command line "console=ttyHSL0,115200,n8 androidboot.hardware=qcom androidboot.bootdevice=msm_sdcc.1 user_debug=31 msm_rtb.filter=0x3F ehci-hcd.park=3 maxcpus=2 buildvariant=userdebug"

*** WARNING ****
This image is built using NON-standard mkbootimg!
OFF_RAMDISK_ADDR is 0x02000000
Please modify mkbootimg.c using the above values to build your image.
****************

Extracting kernel to file zImage ...
Extracting root filesystem to file initramfs.cpio.gz ...
All done.
---------------source
To recompile this image, use:
  mkbootimg --kernel zImage --ramdisk initramfs.cpio.gz --base 0x80200000 --cmdline 'console=ttyHSL0,115200,n8 androidboot.hardware=qcom androidboot.bootdevice=msm_sdcc.1 user_debug=31 msm_rtb.filter=0x3F ehci-hcd.park=3 maxcpus=2 buildvariant=userdebug' -o new_boot.img
---------------
24525 blocks
</pre>

The [http://whiteboard.ping.se/Android/Unmkbootimg Kuisma's unmkbootimg utility home page] was not modified since 2015-12-07 : it seems to be out of date... And there is no way to download the source code to investigate...


As this warning is shown for both files (pmboostrap and Lineage), I think it can be ignored safely : 

Lineage :
<pre>
$ unzip  ~/postmarket/taoshan/lineage-14.1-20180909-nightly-taoshan-signed.zip boot.img
$ mv boot.img boot.img.lineage
$ ./unmkbootimg  boot.img.pmbootstrap | grep NON
This image is built using NON-standard mkbootimg!
</pre>

PmBootStrap :
<pre>
$ cp /home/dom/.local/var/pmbootstrap/chroot_rootfs_sony-taoshan/boot/boot.img-sony-taoshan boot.img.pmbootstrap
$ ./unmkbootimg  boot.img.lineage | grep NON
This image is built using NON-standard mkbootimg!
</pre>

== Motherboard ==

[[File:Taoshan_motherboard_sa77GA341.JPG|thumb|left|SA77_GA-341 motherboard]]

The reference of the motherboard is ''''sa77_GA-341''''

=== Serial connector ===
[[File:Taoshan_motherboard_pinout.png|thumb|SA77_GA-341 pinout]]
Presently, we have no idea where the UART pins (TX, RX and ground) are located. Maybe at the top left, under the 'D' letter...

Light blue is voltage when the phone is powered on.

Measured voltage on pin marked "strange" is weird:
* when voltmeter test leads touch this pad and ground (shield in my case) it shows varying 1.6V - 1.7V
* when measuring after boot OR taking voltmeter leads from the pad and touching it again it shows 0.0V

Small pad on bottom between ground and BATT_MID is 1.8V: after connecting it to TX and right after inserting the battery it sends similar string:
{{note| Occasional 9 may be caused by transmission error, I was holding wires in hand}}
<pre>
(8888888988998898888888888888888888888988898898888898888888888898888888889888889888988888888888888988988889888888888888988988888889888888988888988888989888888898888888989888988888988898888888888888888B 
(8888888888988889888888898988888988888888888898888888889888888888898899888888889888888888888888988888888889898889888889888888988889988889889888888888898898988888888888888889889888988888888988888888988B
(8988989888988888888888888898888898888888889988888988898888888888888889989888888988888998888898889889898988988888888898888888889888898888888888888988888888888888888888888888888888988888888888888889888B
</pre>



== Trying to use the Lineage OS prebuilt kernel ==

Reference : [[Using_prebuilt_kernels|Using prebuilt kernels]]

Download the '''unpackbootimg''' utility :
<pre>
$ wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/android-serialport-api/android_bootimg_tools.tar.gz
$ tar xf android_bootimg_tools.tar.gz 
</pre>

Xperia L is running Lineage OS and is connected to the computer with an USB cable.

Use '''adb''' to connect as root :
<pre>
$ sudo adb root
* daemon not running. starting it now on port 5037 *
* daemon started successfully *
restarting adbd as root

$ adb shell
taoshan:/ # whoami
root
</pre>

Find the boot partition (/dev/block/mmcblk0p24) :
<pre>
taoshan:/ # ls -l /dev/block/platform/*/by-name/* | grep -i  "\/boot"                                                                                                                                             
lrwxrwxrwx 1 root root 21 2018-10-26 16:56 /dev/block/platform/msm_sdcc.1/by-name/boot -> /dev/block/mmcblk0p24
</pre>

Get the boot partition content : 
<pre>
taoshan:/ # cat /dev/block/mmcblk0p24 > /sdcard/boot_img_lineage_os.img
taoshan:/ # chmod 666 /sdcard/boot_img_lineage_os.img
taoshan:/ # exit
</pre>

Download and extract to LineageOS boot partition :
<pre>
$ adb pull /sdcard/boot_img_lineage_os.img .
[100%] /sdcard/boot_img_lineage_os.img

$ mkdir boot_img_lineage_os
$ ./unpackbootimg -i boot_img_lineage_os.img -o boot_img_lineage_os

dom@shangrao:~/postmarket/taoshan/temp$ ls boot_img_lineage_os | cat
boot_img_lineage_os.img-base
boot_img_lineage_os.img-cmdline
boot_img_lineage_os.img-pagesize
boot_img_lineage_os.img-ramdisk.gz
boot_img_lineage_os.img-zImage
</pre>

Build LineageOS : 
<pre>
$ pmbootstrap install --no-fde
</pre>

Restart smartphone in fastboot mode : 
* turn the device off
* unplug the USB cable
* while pressing the volume up button, plug the USB cable
* check the led is blue

With the '''fastboott boot''' command, load LineageOS kernel and Postmarket ramdisk in the device memory : 
<pre>
$ sudo fastboot boot ./boot_img_lineage_os/boot_img_lineage_os.img-zImage ~/.local/var/pmbootstrap/chroot_rootfs_sony-taoshan/boot/initramfs-sony-taoshan
creating boot image...
creating boot image - 7084032 bytes
downloading 'boot.img'...
OKAY [  0.220s]
booting...
OKAY [  0.032s]
finished. total time: 0.253s
</pre>

After writing, the device tries to boot (message ''booting...''), but nothing happens : the screen remains black and the led remains blue. 
A '''fastboot devices''' command shows no device connected : the device is frozzen. 

After removing and replacing the battery, you can boot normally.


== fastboot boot issue ==

After serveral tests with the '''fastboot boot''' command and different kernels, I was surprised to see the Samsung logo even with a Postmarket kernel. So I suspected the device to always reboots with the LineageOS kernel written on disk and not with the kernel I loaded in memory...

To check this, I erased the /boot partition (with '''fastboot erase boot''') and I checked that the device could not start : effectively, screen stayed black and the red led was blinking every 5 seconds.

My next step was to use '''fastboot boot''' command to boot with original Lineage kernel and ramdisk. My best result was to send :
* --base 0x80200000 
* --kernel-offset 0x00008000 
* --ramdisk-offset 0x02000000

<pre>
$ sudo fastboot boot --base 0x80200000 --kernel-offset 0x00008000 --ramdisk-offset 0x02000000 -c "console=ttyHSL0,115200,n8 androidboot.hardware=qcom androidboot.bootdevice=msm_sdcc.1 user_debug=31 msm_rtb.filter=0x3F ehci-hcd.park=3 maxcpus=2 buildvariant=userdebug" boot_img_lineage_os.img-zImage boot_img_lineage_os.img-ramdisk.gz
creating boot image...
creating boot image - 13273088 bytes
downloading 'boot.img'...
OKAY [  0.411s]
booting...
OKAY [  0.032s]
finished. total time: 0.443s
</pre>>
	
Device restarted, but screen remained black and the red led was blinking every 5 seconds...
