{{Infobox device
| manufacturer = Google (LG)
| name = Nexus 4
| codename = lg-mako
| image = File:LG Nexus 4 Weston.png
| imagecaption = LG Nexus 4 running Weston
| releaseyear = 2012
| originalsoftware = Android on Linux 3.4
| chipset = Qualcomm APQ8064 Snapdragon S4 Pro
| cpu = Quad-core 1.5 GHz Krait
| gpu = Adreno 320
| storage = 8/16 GB
| display = 768x1280 IPS
| memory = 2 GB
| architecture = armhf
| status_usbnet = Y
| status_flashing = Y
| status_touch = Y
| status_screen = Y
| status_wifi = 
| status_xwayland = 
| status_fde = Y
| status_mainline = 
| status_battery = Y
| status_3d = 
| status_accel = 
| status_audio = 
| status_bluetooth =
| status_camera =
| status_gps = 
| status_mobiledata = 
| status_sms = 
| status_calls = 
| status_otg = Y
| booting = yes
}}
== Contributors ==

* ollieparanoid
* PabloCastellano and robb4 on IRC: Workaround for red screen bug ({{github|54}})

== Installation ==
<pre>
pmbootstrap init
pmbootstrap install
(enter fastboot, see below)
pmbootstrap flasher flash_rootfs
pmbootstrap flasher boot
</pre>

To flash the kernel, you can choose <code>pmbootstrap flasher flash kernel</code> (but charging and power off doesn't work as expected anymore, see below).

== Entering &quot;Fastboot mode&quot; ==

Hold <code>Volume Down</code> + <code>Power</code>, let go of <code>Power</code> once the device display does something (e.g. turns from battery icon to black screen).

== Charging and power off (after flashing the postmarketOS kernel) ==
{{note|You don't have to flash the kernel! <code>pmbootstrap flasher boot</code> is also working!}}
You can flash the postmarketOS kernel, but instead of charging the battery, it will boot straight into postmarketOS (or the on screen keyboard to type in the password). Right now, the best way to charge it from that situation is to boot the recovery TWRP.

You can properly turn the device off by unplugging the usb cable, then booting into fastboot, then choosing power off.

== Wifi ==
Looks like, we need to package the [https://github.com/LineageOS/android_device_lge_mako/blob/12ac6e9aeb32d5ac9fc832f2214ede2c7690d0a6/proprietary-blobs.txt#L152-L157 wcnss.* files] for wifi. A version from 2015 can be found [https://github.com/TheMuppets/proprietary_vendor_lge/tree/cm-14.1/mako/proprietary/vendor/firmware here]. It's a Qualcomm chip.

== Mainline ==
{{note|See [[The Mainline Kernel]] for a general introduction to mainlining.}}
Currently we only have a downstream vendor kernel packaged, not the mainline kernel. The <code>lg-mako</code> has the same [https://en.wikipedia.org/wiki/System_on_a_chip SoC] as the <code>asus-flo</code>, and on the latter it is possible to run [https://plus.google.com/111524780435806926688/posts/fkQ1BMjNNcn Android on a kernel close to mainline].

This means, that most peripherals of the <code>mako</code> should work with mainline as well, once they are enabled in the DTS file. In fact, @vetzki reported in {{github|1079}} that the <code>mako</code> boots when using exactly the same DTS as the one from <code>flo</code> (this is not recommended, as misconfiguring your device like that may damage it). SSH appears to be working for a short time before getting kicked out, the display does not work.

A good way forward would be using a minimal version of the <code>flo</code> DTS, where everything but USB is deleted, and fixing USB / trying to get the display working with the [https://github.com/freedreno/freedreno/wiki/DSI-Panel-Driver-Porting DSI Panel Porting Guide]. The downstream DTSI files that need to be ported to the upstream kernel are probably located [https://github.com/LineageOS/android_kernel_lge_mako/tree/lineage-15.1/arch/arm/boot/dts here], and I guess the exact panel name appears when running <code>dmesg</code> after a successful boot (I did not verify this). Please expand this when you're working on it, and report your progress in #postmarketOS. Check out the [[Mainline Guide]].

== Photos ==
* [https://ollieparanoid.github.io/img/2017-05-26/mako/editor.jpg Weston running with framebuffer issues]
* [https://cloud.githubusercontent.com/assets/6033024/26761940/2e3273e0-4928-11e7-8800-0b4ddb14e239.jpg robb4 patched Weston to display the right colors]

== See also ==
* [https://github.com/freedreno/freedreno/wiki/Nexus-4 freedreno: Nexus 4]
* [https://github.com/postmarketOS/pmbootstrap/tree/master/aports/device/device-lg-mako Device package]
* [https://www.optiv.com/blog/building-a-nexus-4-uart-debug-cable Tutorial: UART debug cable]
* [https://developers.google.com/android/drivers#mako Official proprietary drivers]
* {{issue|1079}} The Nexus 7 DTB is so similar, it even boots
* {{issue|9|linux-postmarketos}} Attempt at writing a new DTS for the Nexus 4
