== Debugging osk-sdl in pmos ==

osk-sdl is an on-screen keyboard built primarily for running in initfs and aiding users with unlocking the rootfs LUKS device from a touch screen device.

It currently lives in the <code>add_osk_initramfs</code> branch of <code>pmbootstrap</code>.

To install it:

<syntaxhighlight lang="shell-session">
$ git clone https://github.com/postmarketOS/pmbootstrap.git
$ git checkout feature/add_osk_initramfs
$ ./pmbootstrap init
<select device options>
<Note: It's helpful to select 'none' here for UI so that osk-sdl can be run from within pmos without conflicting with weston>
$ ./pmbootstrap install --no-fde
</syntaxhighlight>


Using <code>--no-fde</code> will allow pmOS to boot straight into rootfs without requiring unlocking of the partition. This seems counter-intuitive for testing a keyboard made for initramfs, but this will allow you to manually run osk-sdl with various environment options set and/or osk.conf options for debug and testing.

To run osk-sdl from pmOS (not in initramfs):

<syntaxhighlight lang="shell-session">
$ sudo su
# export SDL_VIDEO_GL_DRIVER="libGL.so.1"
# export DFBARGS="system=fbdev,no-cursor,linux-input-grab"
# export TSLIB_TSDEVICE=/dev/input/eventX
# osk-sdl -d a -n a -c /etc/osk.conf -v
</syntaxhighlight>

Note: TSLIB_TSDEVICE should point to your touchscreen device, e.g. /dev/input/event3

== Building OSK-SDL from a branch ==

This is an example APKBUILD you can use to build osk-sdl from a branch instead of a tag. Don't forget to generate a new checksum (<code>pmbootstrap checksum osk-sdl</code>) before trying to build it.

<syntaxhighlight lang="bash">
# Change out the hash here with the hash of the git commit you want to build
_hash=617c1cf407160329535d6dbc6a315fd0dc72de70
pkgname=osk-sdl
pkgver=0.48
pkgrel=0
pkgdesc="Onscreen keyboard for unlocking LUKS devices"
url="https://github.com/postmarketOS/osk-sdl"
arch="all"
license="GPL3"
depends="sdl2 sdl2_ttf cryptsetup-libs mesa-gl directfb"
makedepends="linux-headers sdl2-dev sdl2_ttf-dev cryptsetup-dev"
subpackages=""

source="${pkgname}-${_hash}.tar.gz::https://github.com/postmarketOS/osk-sdl/archive/${_hash}.tar.gz"

options="!strip !check"

build() {
    cd $srcdir/${pkgname}-${_hash}
    make
}

package() {
    install -D -m755 "${srcdir}/${pkgname}-${_hash}"/osk-sdl \
        "$pkgdir"/usr/bin/osk-sdl
    install -D -m755 "${srcdir}/${pkgname}-${_hash}"/osk.conf \
        "$pkgdir"/etc/osk.conf
}
</syntaxhighlight>

== Troubleshooting ==

=== ERROR: Library not found: libGL.so ===

Make sure you've exported SDL_VIDEO_GL_DRIVER:

<syntaxhighlight lang="shell-session">
$ sudo su
# export SDL_VIDEO_GL_DRIVER="libGL.so.1"
</syntaxhighlight>

=== DirectFB/FBDev: No supported modes found in /etc/fb.modes and current mode not supported! ===

To fix this error message you need to create /etc/fb.modes and add a framebuffer mode to this. An example for a display with 1080x1920 resolution and 32-bit color depth:

<syntaxhighlight lang="Xorg">
mode "1080x1920-0"
    # D: 0.001 MHz, H: 0.001 kHz, V: 0.000 Hz
    geometry 1080 1920 1080 1920 16
    timings 898000000 75 129 4 8 5 4
    rgba 8/16,8/8,8/0,8/24
endmode
</syntaxhighlight>

To calculate the mode for your device you can run <code>fbset</code>, however beware that the mode it returns isn't always supported. Some things to be aware of:
* Make sure the last number of the geometry line (the color depth) is not 32 or 24, because this is not supported by directfb. If you need 32 or 24 there, set this value to 16 and set <code>pixelformat</code> in DFBARGS to a supported pixel format with color depth 32 or 24 (see [https://linux.die.net/man/5/directfbrc man page of directfbrc] for all available pixelformat options).
* Normally the geometry line should have twice your resolution (both for physical and virtual resolution). Fbset sometimes returns wrong values with which osk-sdl cannot cope (generates segmentation fault when touching the keyboard).

== References ==

* [https://linux.die.net/man/5/fb.modes fb.modes man page]
* [https://linux.die.net/man/8/fbset fbset man page]
* [https://linux.die.net/man/5/directfbrc directfbrc man page]
