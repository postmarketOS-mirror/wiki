{{Infobox device
| manufacturer = Google (ASUS)
| name = Nexus 7 (2012)
| codename = asus-grouper & asus-tilapia
| image = File:Nexus7_grouper_gnome_maps.jpeg
| imagecaption = Google Nexus 7
| releaseyear = 2012
| originalsoftware = Android 4.1.2 on Linux 3.0
| chipset = Nvidia Tegra 3
| cpu = Quad-core 1.2 GHz Cortex-A9
| gpu = ULP GeForce
| storage = 8/16/32 GB
| display = 800x1280 IPS
| memory = 1 GB
| architecture = armhf
| status_usbnet = Y
| status_flashing = Y
| status_touch = Y
| status_screen = Y
| status_wifi = Y
| status_xwayland = Y
| status_fde = 
| status_mainline = P
| status_battery = Y
| status_3d = P
| status_accel = 
| status_audio = Y
| status_bluetooth = Y
| status_camera =
| status_gps = 
| status_mobiledata = -
| status_sms = -
| status_calls = -
| booting = yes
}}
== Contributors ==
* antonok
* pangelo
* okias

=== Users owning this device ===
{{Device owners}}


== Flashing ==
=== How to enter flash mode ===
* Connect a USB cable
* Power the device off
* Hold power + volume down
* <code>fastboot</code> should work when the green android appears on the screen

=== Installation process (legacy kernel) ===
<syntaxhighlight lang="shell" line='line'>
$ git clone https://gitlab.com/postmarketOS/pmbootstrap.git
$ cd pmbootstrap
$ ./pmbootstrap.py init
$ ./pmbootstrap.py install
$ ./pmbootstrap.py flasher flash_kernel
</syntaxhighlight>

=== Special installation process (development setup, cutting edge, kernel over approx. 4M) ===
[https://gitlab.com/postmarketOS/pmaports/merge_requests/822 Merge Request] to make basic kernel work out-of-box.

If you need bigger kernel, (or previous MR not merged yet), this includes way to the latest mainline kernel with size limited only by BOOT partition or how much device will be able boot it:

<syntaxhighlight lang="shell" line='line'>
mkdir ~/code
cd ~/code
git clone https://gitlab.com/postmarketOS/pmbootstrap.git
cd pmbootstrap
alias pmbootstrap=~/code/pmbootstrap/pmbootstrap.py
pmbootstrap init
# pmbootstrap initfs hook_add debug-shell # not required, only for debugging
pmbootstrap export
pmbootstrap chroot -- apk add abootimg android-tools mkbootimg dtbtool findutils
export DEVICE="$(pmbootstrap config device)"
export WORK="$(pmbootstrap config work)"
export TEMP="$WORK/chroot_native/tmp/mainline/"
mkdir -p "$TEMP"

cd ~/code
git clone https://github.com/grate-driver/linux.git
cd linux
source ~/code/pmbootstrap/helpers/envkernel.sh

sudo curl -o .output/.config https://raw.githubusercontent.com/okias/nexus7-grouper-kernel-config/master/.config
pmbootstrap initfs extract # ugly hack to get kernel booting without external initrd
sudo cp -r ~/.local/var/pmbootstrap/chroot_rootfs_asus-grouper/tmp/initfs-extracted ./.output/ # initfs is later compiled into kernel

make -j5

cd ~/code/linux/.output/arch/arm/boot
cat zImage dts/tegra30-grouper-bach.dtb > ~/code/linux/.zImage-dtb
cp ~/code/linux/.zImage-dtb "$TEMP"/zImage-dtb

pmbootstrap flasher list_devices
</syntaxhighlight>
===== a. Boot only =====
<syntaxhighlight lang="shell" line='line'>
pmbootstrap chroot -- fastboot boot /tmp/mainline/zImage-dtb
</syntaxhighlight>
===== b. Flash kernel: =====
We're still not able bundle classic boot.img, so we need generate boot.img without ramdisk (which is already included inside kernel).
<syntaxhighlight lang="shell" line='line'>
pmbootstrap chroot -- mkbootimg-osm0sis --kernel "/tmp/mainline/zImage-dtb" --base "0x10000000" --kernel_offset "0x00008000" --ramdisk_offset "0x01000000" --tags_offset "0x00000100" --pagesize "2048" -o "/tmp/mainline/boot.img"
pmbootstrap chroot -- fastboot boot /tmp/mainline/boot.img # test if image will boot
pmbootstrap chroot -- fastboot flash boot /tmp/mainline/boot.img # flash only tested image
</syntaxhighlight>

=== Flashing rootfs ===
==== rootfs under 650MB ====
<syntaxhighlight lang="shell" line='line'>
pmbootstrap flasher flash_rootfs
</syntaxhighlight>

==== rootfs over 650MB to USERDATA ====
Be '''very careful''' here and feel free to ask on Matrix channel before accidentally bricking your device with selecting bad partition!
<syntaxhighlight lang="shell" line='line'>
# start TWRP
(computer) $ adb shell
(twrp) $ df #look for the data partition. should be something like /dev/block/mmcblk0p10 with /data next to it
(computer again) $ adb push /tmp/postmarketOS-export/asus-grouper.img /dev/block/_REPLACE_WITH_CORRECT_PARTITION_ # example: mmcblk0p10, may be different for your Nexus version!
</syntaxhighlight>

== Hardware status (mainline) ==
There is '''multiple hardware revisions''', so this status may not apply to all of them. This status apply for tilapia (Bach revision).
{|class="wikitable feature-colors"
! Status
! Hardware
! Info
|-
| Y
|Booting
|... but initfs must be packed directly inside kernel (not into boot.img as usual), otherwise kernel won't boot. With downstream kernel it works.
|-
| Y
|Touchscreen
|Works.
|-
| Y
|USB
|Works.
|-
| Y
|SDHCI
|Works.
|-
| Y
|WiFi
|Wi-Fi works with IWD daemon (apk add iwd; rc-config del wpa_supplicant; rc-config add iwd; and [https://wiki.archlinux.org/index.php/NetworkManager#Using_iwd_as_the_Wi-Fi_backend HOWTO]). 
|-
| Y
| GPIO keys
|There is 3 keys on GPIO: Power, Volume up, Volume down.
|-
| Y
| Battery
|Driver works.
|-
| P
| Charger
|there is driver for the charger in upstream kernel, but it doesn't have support for device-tree
|-
| Y
|Bluetooth
|Works, audio not tested yet. Needs firmware: brcm/BCM4330B1.hcd
|-
| Y
|Sound
|sound also works, but require ALSA UCM configuration (for now you'll need to enable DACs and etc using alsamixer)
alsamixer -c 0 # and enable something like:
"Speaker R"
"Speaker L"
"DAC MIXR INF1"
"DAC MIXL INF1"
"SPOL MIX DAC R1"
"SPOL MIX DAC L1"
"Stereo DAC MIXR DAC R1"
"Stereo DAC MIXL DAC L1" (bu
|-
| Y
|Temperature sensor
|temperature sensor works
|-
| Y
|Proximity sensor
|
|-
| Y
|Light sensor
|Driver al3010. Brightness regulation [https://floss.social/@okias/103371284828595026 works], install iio-sensor-proxy .
|-
| N
|Front camera
|
|-
| P
|3D support
| [https://github.com/grate-driver/mesa/commits/19.3 mesa-3d repository (branch 19.3)] at least partly OpenGL 1.4 at this moment, for accelerated environment is needed at least GL 2.1 or GLES2)
|-
| N
|Modem
|Present only on tilapia, no-one plan to work on it for now. 
|-
|}

== UI options ==
* Weston: Boots on legacy kernel. Touchscreen is working on legacy kernel. The reboot issue exists on legacy kernel. Maybe it is an issue with the kernel we are using?
* Phosh (mainline only): Purism Librem 5 compositor and GNOME based environment, needs performance optimization, but works.

== Development Notes ==

==== Kernel ====

* Up-to-date [https://github.com/grate-driver/linux kernel], where tegra development ongoing.
* Old Android kernels: [https://github.com/LineageOS/android_kernel_asus_grouper LineageOS kernel sources] [https://github.com/Unlegacy-Android Unlegacy kernel sources]
* [https://wiki.ubuntu.com/Nexus7/Kernel Ubuntu Nexus 7 Kernel wiki] (old, last updated 2012)

* The default images for android provided by google have the bootloader broken, meaning it can't be flashed. It does not seem to affect the install process of PostMarketOS, but is something to take into account. If you need a working bootloader image version 4.23 can be found [[https://drive.google.com/file/d/1eVEQJtrByuAYRmS924-BAMGQcRXuBj7C/view?usp=sharing| here]]

==== Graphics ====

* (legacy) CONFIG_VT had to be enabled for graphics to work. In menuconfig this is located under Device Drivers -&gt; Character devices -&gt; Virtual terminal.
* (legacy) <s>/sys/class/graphics/fb0/mode is empty on boot, it must have U:800x1280p-0. This uses the same initfs hook as many other devices.</s> '''Update:''' Seems to be correctly set now
* (legacy) weston with fbdev-backend.so uses pixman-type=3 (PIXMAN_TYPE_ABGR), which now does not require configuration.
* The touchscreen input device is named <code>elan-touchscreen</code>.

==== Wifi ====

* There's a proper firmware subpackage now, wifi device should work out-of-the box. 
* "Desktop" Linux firmware are outdated. Check [https://android.googlesource.com/platform/hardware/broadcom/wlan/+/master/bcmdhd/firmware/bcm4330/ here] for latest one.
* (legacy)It is possible to manually get wifi working by manually copying fw_bcmdhd.bin and nvram.txt to their kernel-specified locations and configuring <code>/etc/network/interfaces</code>. At this point, running <code>/etc/init.d/networking restart</code>, gave an error about being unable to get a MAC address. After restarting the device to find that wifi Just Workedâ„¢, it was possible to successfully scan for wireless networks and establish a connection to secured wireless APs.
* To connect follow the instructions on [[WiFi#Using_NetworkManager|this page.]]

=== Pending Issues ===

* {{issue|201|pmaports}}: device seems to reboot spontaneously under heavy load (could be a hardware problem though, needs more testing).  UPDATE:22/12/19 - Seems to noly happen with "legacy" kernel.
* {{issue|1422|pmbootstrap}}: The <code>system</code> partition is too small to hold rootfs images over 650Mb (e.g. Plasma Mobile is about 1.1Gb). Flashing to <code>userdata</code> partition fails.
* {{issue|1844|pmbootstrap}}: grouper: move to grate (upstream close) kernel

=== See also ===

These are other pending issues that are related to this device:

* {{issue|60|pmbootstrap}}: Use the system and userdata partition on Android with LVM

=== Fun Fact ===

''<code>grouper</code> was the first tablet to run pmOS!''

''<code>tilapia</code> has exactly same HW as <code>grouper</code>''
