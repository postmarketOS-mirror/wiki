Here's a step-by-step guide to resolving <code>Could not find dependency</code> errors coming from <code>pmbootstrap</code>, as well as <code>unsatisfiable constraints</code> errors coming from <code>apk</code>.

== Why does this happen? ==
The errors indicate that there is an issue with the binary package repositories either of postmarketOS or of Alpine Linux. pmOS is built upon Alpine's "edge" repository (as in [https://en.wikipedia.org/wiki/Bleeding_edge_technology bleeding edge]), so a certain amount of breakage is expected. (When pmOS becomes more stable, we will switch to Alpine's stable branches[https://github.com/postmarketOS/pmbootstrap/pull/1400#issuecomment-379549100]).

In most cases a library (e.g. <code>libcrypto.so</code> from libressl/openssl) has been updated with an incompatible change ([https://en.wikipedia.org/wiki/Soname soname bump]), and a package that was built against the previous version did not get rebuilt yet.

Triggering rebuilds is done by both Alpine and pmOS by increasing the <code>pkgrel</code> in the [https://wiki.alpinelinux.org/wiki/APKBUILD_Reference <code>APKBUILD</code>].

=== Alpine Linux ===
The package maintainers from Alpine trigger a rebuild for all packages that depend on a certain library at the same time as they update that library. But building packages takes time, and when a big number of packages depend on such a library, build bots may even get stuck at a package that used to compile fine a few months ago, but doesn't compile in the current environment (let's say because they don't build with the latest GCC version that Alpine has packaged).

There is a dedicated build bot for each architecture and branch combination (e.g. `armhf-edge`), and once it is stuck, it won't continue with compiling other packages in the queue. If you have some time to spare, you could actually help out with getting these packages to compile again by finding out which one is failing [http://build.alpinelinux.org/ here] (click the packages to see the build logs) and figuring out why it is stuck and how it can be patched in [https://wiki.alpinelinux.org/wiki/Alpine_Linux:IRC #alpine-devel]. The quick version is rebuilding just the packages you need by yourself, as explained below.

=== postmarketOS ===
For postmarketOS packages, we need to trigger the rebuild manually, as soon as a library gets updated in Alpine on which one of our packages depend. We have a testcase in place, that detects such breakage and we fix it in `master` and our binary repository as soon as we see it, typically within a day.

== Update your package index ==
Maybe the issue has already been resolved in the package repositories of postmarketOS or Alpine. <code>pmbootstrap</code> will automatically download the newest package indexes when they are older than four hours. Force it to download the currrent index files with:
<syntaxhighlight lang="shell">
$ pmbootstrap update
</syntaxhighlight>

From inside the postmarketOS installation, you can do the same with:
<syntaxhighlight lang="shell">
# apk update
</syntaxhighlight>

== Find the package name ==
=== apk ===
All packages are mentioned that depend on the shared library. Find the package that depends on the lower version of it. In the example below, this is <code>g++-armhf-6.4.0-r5[libstdc++=6.4.0-r5]</code> (the higher version would be <code>libstdc++=6.4.0-r6</code>). This means the package that needs to be rebuilt is <code>g++-armhf</code>).

<pre>
ERROR: unsatisfiable constraints:
libstdc++-6.4.0-r6:
breaks:
g++-armhf-6.4.0-r5[libstdc++=6.4.0-r5]
satisfies: world[libstdc++]
g++-6.4.0-r6[libstdc++=6.4.0-r6]
g++-6.4.0-r6[libstdc++=6.4.0-r6]
gcc-6.4.0-r6[so:libstdc++.so.6]
lzip-1.19-r1[so:libstdc++.so.6]
gcc-6.4.0-r6:
breaks: g++-armhf-6.4.0-r5[gcc=6.4.0-r5]
satisfies: world[gcc]
g++-6.4.0-r6[gcc=6.4.0-r6]
build-base-0.5-r0[gcc]
</pre>

=== pmbootstrap ===
Here the package depending on the dependency that was not found is not mentioned:
<pre>
[21:38:23] ERROR: Could not find dependency 'so:libcrypto.so.42' in any aports folder or APKINDEX. See: <https://postmarketos.org/depends>
[21:38:23] Run 'pmbootstrap log' for details.
[21:38:23] See also: <https://postmarketos.org/troubleshooting>
</pre>

In order to see it, run your last <code>pmbootstrap</code> command again, but with verbose mode (<code>-v</code>). For example:
<syntaxhighlight lang="shell-session">
$ pmbootstrap -v install
</syntaxhighlight>

After it crashed at the same point, check <code>pmbootstrap log</code> for a line like the following (on the right should be the library you are interested in). The "????" is the package we are looking for. If you're having a hard time looking through the whole log, you can use <code>pmbootstrap log -c</code> to clear it.

<pre>
????: depends on: so:libcrypto.so.42
</pre>

== Find out where the package comes from ==
We need to know if the package comes from postmarketOS or Alpine Linux. Change to your <code>pmbootstrap</code> folder, and search for the package:

<syntaxhighlight lang="shell-session">
$ find aports -name "hello-world"
aports/main/hello-world
</syntaxhighlight>

If you can find it, the package comes from postmarketOS. Otherwise from Alpine.

== Trigger a rebuild ==
=== postmarketOS ===
It might be, that we marked the package for rebuild already, so pull the latest changes from the master branch (or rebase if you are on your own branch):

<syntaxhighlight lang="shell-session">
$ git pull
</syntaxhighlight>

Then try again. If the problem persists, mark all postmarketOS packages with broken dependencies for rebuild:

<syntaxhighlight lang="shell-session">
$ pmbootstrap pkgrel_bump --auto
</syntaxhighlight>

When you execute the command that caused the error next time, the package should get built locally and the problem should be gone.

=== Alpine Linux ===
Clone Alpine's packages to a folder outside of your <code>pmbootstrap</code> folder:
<syntaxhighlight lang="shell-session">
$ cd ~/code
$ git clone https://git.alpinelinux.org/cgit/aports
</syntaxhighlight>

Find the package in question:
<syntaxhighlight lang="shell-session">
$ find -name uboot-tools
./testing/uboot-tools
</syntaxhighlight>

Build it with <code>pmbootstrap</code> for the architecture in question (replace the path to <code>pmbootstrap</code> accordigly):
<syntaxhighlight lang="shell-session">
$ mkdir -p ~/code/pmbootstrap/aports/_temp
$ cp -r ./testing/uboot-tools ~/code/pmbootstrap/aports/_temp/
$ pmbootstrap build uboot-tools --arch=armhf
$ rm -r ~/code/pmbootstrap/aports/_temp
</syntaxhighlight>

= See also =
* {{github|1408}} nokia-n900: pmbootstrap install fails for libcrypto.so.42
