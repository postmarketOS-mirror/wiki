{{Infobox soc
| name = SDM845
| manufacturer = Qualcomm
| arch = aarch64
| cpu = 4x 2.8 GHz Kryo 385 Gold, 4x 1.8 GHz Kryo 385 Silver
| gpu = Adreno 630
| year = 2018
| process = 10
| mainline = yes
| status_cpu = Y
| status_storage = Y
| status_usb = Y
| status_display = Y
| status_gpu = Y
| status_pinctrl = Y
| status_i2c = P
| status_audio = N
| status_video = N
| status_thermal = N
| status_wifi = Y
| status_bluetooth = P
| status_modem = P
| status_camera = N
| usb_device = DWC3
| pmic = pm8998 (v4.5-rc1)
| wifi = ath10k WCN3990
}}

[https://www.qualcomm.com/products/sdm845 SDM845] (or Snapdragon 845) is a Qualcomm SoC released in 2018, with mainline support originally added for the Dragonboard 845c.


== Devices ==
=== SDM845 (Snapdragon 845) ===
{{#cargo_query:
tables=Devices
|fields=CONCAT( '[[', _pageName, '|',Manufacturer,' ',Name,']]' )=Device,Codename,StatusMainline=Mainline
|order by=Devices.Manufacturer, Devices.Name
|format=table
|limit=9999
|where=Booting and Devices.chipset='Qualcomm SDM845 Snapdragon 845'
|more results text=
}}


=== Adding yours ===
If you have an SDM845 based device that isn't in this list you should definitely do something about that, checkout the [[SDM845_Mainlining|SDM845 Mainlining Guide]] for instructions on porting new devices. It is fairly straightforward to get core functionality working on most devices.

{{mainpage-button|application-run|SDM845_Mainlining|SDM845 Mainlining}}

== Audio ==
TODO - audio hasn't been worked on as of yet, although the adsp audio processor subsystem boots.

== Modem ==
The modem is booted by the Q6V5 MSS Peripheral Image Loader, it is required to boot the WiFi adapter.

=== Testing with QRTR ===
On SDM845, unlike previous SOCs, the modem is accessed through QRTR, not through a dedicated device created through rpmsgexport.
To check if the modem is available run <code>qrtr-lookup</code> and check for a service like <code>User Identity Module service</code>, or <code>Phonebook Management Service</code>.

Example <code>qrtr-lookup</code> output (for enchilada):
<pre>
oneplus6:~$ qrtr-lookup
  Service Version Instance Node  Port
       66       1      180    0     1 Service registry notification service
       43       2       18    0     4 Subsystem control service
       15       1        0    0    22 Test service
       51       1        2    0    23 CoreSight remote tracing service
       21       1        0    0    24 Modem embedded file system service
       24       1        0    0    25 Thermal mitigation device service
       23       1        0    0    26 Thermal sensors service
       22       1        0    0    27 Time service
       36       1        0    0    29 Persistent device configuration service
       49       1        2    0    30 IPA control service
       54       1        0    0    34 <unknown>
       17       1        0    0    36 Specific absorption rate service
       74       1        0    0    37 <unknown>
     4098       0        0    0    38 <unknown>
       34       1        0    0    40 Coexistence service
       41       1        1    0    42 RF radiated performance enhancement service
       55       1        2    0    44 <unknown>
      228       1        0    0    45 <unknown>
        9       2        0    0    50 Voice service
       50       1        0    0    51 <unknown>
        3       1        0    0    52 Network Access Service
       12       1        0    0    53 Phonebook Management service
       10       2        0    0    54 Card Application Toolkit service (v2)
        1       1        0    0    55 Wireless Data Service
        4       1        0    0    56 Quality Of Service service
       26       1        0    0    57 Wireless data administrative service
        7       1        0    0    58 Authentication service
        8       1        0    0    59 AT service
       29       1        0    0    60 Circuit switched videotelephony service
       11       1        0    0    61 User Identity Module service
       47       1        0    0    62 <unknown>
       71       1        0    0    63 <unknown>
        5       1        0    0    64 Wireless Messaging Service
       42       1        0    0    71 Data system determination service
        2       1        0    0    75 Device Management Service
       16       2        0    0    76 Location service (~ PDS v2)
       48       1        0    0    79 <unknown>
       68       1        0    0    80 <unknown>
       51       1        3    0    82 CoreSight remote tracing service
       69       1        0    0    83 ATH10k WLAN firmware service
       77       1        0    0    89 <unknown>
       33       1        0    0    92 IMS application service
       18       1        0    0    93 IMS settings service
     4099       0        0    0   101 <unknown>
       57       1        0    0   103 <unknown>
       14       1        0    1    14 Remote file system service
       64       1        1    1 16389 Service registry locator service
     4096       1        0    1 16390 <unknown>

</pre>

=== Getting SIM slot status ===

Run <code>qmicli -d qrtr://<node> --uim-get-card-status</code> to get information about cards inserted.

Example output (for enchilada):
<pre>
oneplus6:~$ qmicli -d qrtr://0 --uim-get-card-status
[qrtr://0] Successfully got card status
Provisioning applications:
        Primary GW:   session doesn't exist
        Primary 1X:   session doesn't exist
        Secondary GW: session doesn't exist
        Secondary 1X: session doesn't exist
Slot [1]:
        Card state: 'present'
        UPIN state: 'not-initialized'
                UPIN retries: '0'
                UPUK retries: '0'
        Application [1]:
                Application type:  'usim (2)'
                Application state: 'detected'
                Application ID:
                        A0:00:00:00:87:10:02:FF:FF:FF:FF:89:03:02:00:00
                Personalization state: 'unknown'
                UPIN replaces PIN1: 'no'
                PIN1 state: 'not-initialized'
                        PIN1 retries: '0'
                        PUK1 retries: '0'
                PIN2 state: 'not-initialized'
                        PIN2 retries: '0'
                        PUK2 retries: '0'
Slot [2]:
        Card state: 'present'
        UPIN state: 'not-initialized'
                UPIN retries: '0'
                UPUK retries: '0'
        Application [1]:
                Application type:  'usim (2)'
                Application state: 'detected'
                Application ID:
                        A0:00:00:00:87:10:02:FF:44:FF:12:89:00:00:01:00
                Personalization state: 'unknown'
                UPIN replaces PIN1: 'no'
                PIN1 state: 'not-initialized'
                        PIN1 retries: '0'
                        PUK1 retries: '0'
                PIN2 state: 'not-initialized'
                        PIN2 retries: '0'
                        PUK2 retries: '0'
</pre>

=== On making phone calls ===
There is work in ModemManager to add qrtr support, more research needs to be done.

=== References ===

* {{MR|1356|pmaports}} Relevant discussion on renaming the msm-modem package as rpmsgexport is not needed on SDM845.

== WiFi ==
Wifi is functional! Firmware for the modem and ath10k module must be loaded in order to have functional wifi.

3 packages are required for functional wifi:

rmtfs, pd-mapper and tqftpserv can be installed with

<code>apk add rmtfs pd-mapper tqftpserv</code>

({{MR|1080|pmaports}}).

[https://github.com/jhugo/linux/tree/5.5rc2_wifi This readme] can then be followed to fixup the firmware.

For some devices [https://gitlab.com/sdm845-mainline/sdm845-linux-next/-/commit/698b631a6aaf7a2c2f91c9514c552a734e1cdc63 this commit] is also needed
as some wlan firmware blobs don't play nice.

== Display ==

The Adreno 630 is relatively easy to work with, after adding a driver for your panel, obtain [https://gitlab.com/sdm845-mainline/sdm845-linux-next/-/commit/41ac945f035a7facab53b43d7c3506870f1fb2b4 the firmware] from
your device and either compile into the kernel (in addition to enabling CONFIG_DRM_FBDEV_EMULATION for early dmesg)) or add to the right subdirectory under /lib/firmware.


== I2C ==

I2C and the Geni hardware is functional and supported, however it is missing a special GPI DMA mode used by a few devices (e.g. touchscreen on Enchilada). A solution is to instead create a 'bitbang' CPU driven I2C device that simply reuses the GPIO pins that are normally driven by Geni.

* [https://gitlab.com/sdm845-mainline/sdm845-linux-next/-/blob/8233fd9a8e48a4e09272035f16876585487f5c13/arch/arm64/boot/dts/qcom/sdm845-oneplus-enchilada.dtsi#L43 See here for an example.]

== Bluetooth ==

Bluetooth is functional on Beryllium, however it requires that either the firmware be included in the kernel, or that bluetooth be compiled as a module.

On enchilada, bluetooth firmware is loaded but it fails to communicate with the bluetooth hardware to finish initialisation.
{{todo|Show error logs}}

== See also == 

[[OnePlus_6_(oneplus-enchilada)]]

[https://gitlab.com/sdm845-mainline/sdm845-linux-next sdm845-linux-next] a common device tree for SDM845 mainline devices.
Current devices include the OnePlus 6(T) and the Pocophone F1.

== Who's working on it ==

* [[User:kalube]] (@kalube on Matrix)
* [[User:venji10]] (@venji10 on Matrix)

{{todo|add more devs :D}}
