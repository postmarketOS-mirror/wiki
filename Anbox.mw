{{note|Consider using native Linux programs instead, see [[FAQ]].}}
{{note|Development on this feature can be done without running pmOS on a real device with [[QEMU]]. Please use the lts kernel for that as the virt kernel doesn't include the necessary modules.}}
{{note|Anbox is currently somewhat broken on armv7 because Anbox assumes 64 bits in some places, which breaks input (see https://github.com/anbox/anbox/issues/1214#issuecomment-524578664. Please manifest yourself if you can test and try that)}}
{{note|Works only on kernels with DRI support, see [[Mainlining Guide]].}}

[[File:Anbox_app_manager.png|thumb|The anbox application manager with the default apps.]]

'''[https://anbox.io Anbox]''' runs Android apps on Linux using a trimmed down version of Android in a container. Anbox allows one to use Android applications sandboxed, running alongside the native Linux programs. It can be very handy to help people switch from Android to an operating that respects their privacy.

See {{milestone|7}} for current progress.

== Installation ==

Install the <code>postmarketos-anbox</code> package. Launch using <code>anbox-launch</code> or the icon launcher.


== Porting ==

=== Requirements ===

You need a few things to get started with porting Anbox support to your device:

* '''device with mainline postmarketOS kernel support'''

Since Anbox require DRI to function, you need mainline kernel to get it to work.

* '''Linux environment'''

pmbootstrap needs Linux environment to function, and porting process may also require rebuilding the kernel.

=== Checking defconfig ===

First, you need to know which kernel package does your device use to perform a kconfig check(replace wiki-example with your actual device codename):

<syntaxhighlight lang="shell-session">
$ cd $(pmbootstrap config aports)
$ cat device/testing/device-wiki-example/APKBUILD | grep linux
</syntaxhighlight>

The output of the last command will be like this: <code>depends="'''linux-postmarketos-wiki-example''' mesa-git-dri-gallium"</code>. Your mainline Linux package name will be similar to the highlighted sample one.

Then you need to verify the defconfig with pmbootstrap to make sure all the kernel modules Anbox require will be installed(replace linux-postmarketos-wiki-example with actual kernel package name).

<syntaxhighlight lang="shell-session">
$ pmbootstrap kconfig check --anbox linux-postmarketos-wiki-example
</syntaxhighlight>

If the check was successful, pmbootstrap will output <code>kconfig check succeeded!</code>. If the check is successful, you can install the postmarketos-anbox package and run <code>anbox-launch</code> to start Anbox.

If some checks failed, you need to rebuild the kernel package with updated defconfig. Update the defconfig so <code>pmbootstrap kconfig check --anbox</code> command will output <code>kconfig check succeeded!</code>.

=== Updating defconfig ===

First, you need to bump pkgrel of your kernel package:

<syntaxhighlight lang="shell-session">
$ pmbootstrap pkgrel_bump linux-postmarketos-wiki-example
</syntaxhighlight>

Then, use <code>pmbootstrap kconfig edit linux-postmarketos-wiki-example</code> to edit the defconfig. You can browse the options menu with arrow keys and select options with Space key. You can also search your needed kconfig option with "/" button.

Once done, close the menuconfig with exit button on bottom. pmbootstrap will update your kernel defconfig and you'll be able to build the kernel.

Try building the kernel with <code>pmbootstrap build linux-postmarketos-wiki-example</code>. If build succeeds, flash the kernel into your device <code>pmbootstrap install && pmbootstrap flasher flash_kernel</code>, and install Anbox.

== Troubleshooting ==

=== I don't have access to the internet ===

Anbox require an anbox0 bridge interface to access the internet. <code>ip link</code> should report an anbox0 interface for the network to work. There seem to be some kind of kernel requirement too, see {{Issue|480|pmaports}} (contains workaround) for the investigation about that.

=== When I start Anbox, it complains about DBus ===

<code>[daemon.cpp:61@Run] Failed to request DBus service name</code> means dbus isn't running, or that you launched it incorrectly (check environment variables are set with <code>env</code>). Ensure you [https://gitlab.com/postmarketOS/pmaports/issues/458 start dbus with your session] and that you are not starting Anbox with ssh.


== Serious Debugging ==

If you never see the application manager, there can be plenty of problems. The first step to debug this is knowing roughly where it fails.

=== Check the openRC service ===

<code>rc-service anbox-container-manager status</code> will give you the state of the container manager. If it reports to be stopped despite your attempts to start it, then the container manager exited. Tell me that '''the container ''manager'' doesn't run''' in a bug report and include <code>/var/lib/anbox/logs/container.log</code>.

=== Check if the container is up ===

If the container manager runs, it doesn't necessarily means the container android runs in is started. To check if the container is up and running, you can try two things can give interesting clues:

;using <code>anbox session-manager</code>
: check what it answers when you run it. <code>Failed to start container</code> is a pretty obvious way to tell the container doesn't run; but sometimes the session manager will segfault instead. You usually can still tell if container is started.

;using <code>/var/lib/anbox/logs/container.log</code>
: the file will (hopefully) contain a non-empty log. Look for <q>Received container state "ABORTING" instead of "RUNNING"</q> or <q>Set container state to "STOPPED"</q>.

In this case, tell me in a bug report that '''the container ''itself'' doesn't run''' and include <code>/var/lib/anbox/logs/container.log</code>.

=== Check if <code>adb</code> works ===

Install {{aport|android-tools}} and run <code>adb shell</code>. If you do have a shell, that's great, Android at least started to start. If adb answers you that no devices/emulators are found and the container is running, then tell me in a bug report that '''adb couldn't find the device''' and include <code>/var/lib/anbox/logs/console.log</code>.

=== Check if <code>adb install</code> works ===

Download an apk, for example the [https://f-droid.org/FDroid.apk F-Droid one] and try to install it. For example, <code>adb install Dowloads/FDroid.apk</code>. If this doesn't work, then Zygote probably didn't start. If you can get a shell, but can't install an app with adb, tell me in a bug report that '''''adb install'' doesn't work''' and include <code>/var/lib/anbox/logs/console.log</code>.

If <code>adb install</code> works, congratulations, we have only got Anbox to run that far once or twice so far. Please still open an issue if you don't get the anbox application manager to show up, including <code>/var/lib/anbox/logs/console.log</code>.

[[Category:Technical Reference]]
