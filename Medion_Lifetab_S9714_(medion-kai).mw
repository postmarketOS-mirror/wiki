{{Infobox device
| manufacturer = Lenovo
| vendor = Medion
| name =  Medion Lifetab S9714
| codename = medion-kai
| image = File:Medion-kai.jpg
| imagecaption = Medion Lifetab S9714
| releaseyear = 2012
| originalsoftware = Android 4.0 / 4.1
| chipset = NVIDIA TEGRA 3
| cpu = NVIDIA TEGRA 3 Quad-Core 1.2 GHz
| gpu = NVIDIA TEGRA 3 (Ultra Low Power GeForce)
| storage = 32 GB internal storage
| display = 1280 x 800 touchscreen
| memory = 1 GB
| architecture = armv7
<!-- the following status_* questions should be answered with Y - yes, P - partial, N - no, or left blank (for untested or unknown) -->
| status_usbnet = Y
| status_flashing = Y
| status_touch = Y
| status_screen = Y
| status_wifi = <!-- Wireless network works? -->
| status_xwayland = <!-- Showing X11 applications in a Wayland compositor (Weston, KWin, ...) works? -->
| status_fde = <!-- When installing with full disk encryption, can you type in the password with the on screen keyboard? -->
| status_mainline = <!-- Instead of a Linux kernel fork, it is possible to run mainline. -->
| status_battery = <!-- Charging the battery with charging-sdl is possible -->
| status_3d = <!-- Hardware accelerated 3D graphics (e.g. with freedreno) -->
| status_accel = <!-- The sensor that measures proper acceleration works -->
| status_audio = <!-- Using the device's speakers/headphone jack works -->
| status_bluetooth = <!-- It's possible to pair and use other devices via the bluetooth protocol -->
| status_camera = <!-- Taking photos and videos works. -->
| status_gps = <!-- The Global Positioning System sensor works.  -->
| status_mobiledata = <!-- Connecting to the Internet via cellular network. -->
| status_sms = <!-- Sending and receiving short messages works as intended. -->
| status_calls = <!-- Talking to other people over the cellular network. -->
| status = <!-- Text displayed in the "not booting" table on the Devices page , e.g "kernel compiles, doesn't boot" -->
| booting = yes <!-- The device is booting at all, can be yes/no *IMPORTANT* -->

<!-- you can also use these lines if you need to:
if the device haven't originally ran Android OS, e.g. Nokia N900
| n-android =  âœ”
Version of the kernel that pmos is running
| pmoskernel = 3.x.x
see Unixbench page on wiki
| whet_dhry = 0.0
Is OTG available, not used in wiki
| status_otg = -
-->
}}

== Contributors ==
* [[User:Bonsaiblue|Bonsaiblue]]

== Maintainer(s) ==
<!-- Only if this device doesn't run on linux-postmarketos yet! -->
<!-- This person needs to be willing to answer questions from users of this device -->

== Users owning this device ==
{{Device owners}}
<!-- autogenerated, use {{Owns device|devicepage|notes}} on your profile page -->
<!-- use _ instead of spaces in device page name, e.g. {{Owns device|HTC_Desire_(htc-bravo)|custom notes}}-->
<!-- you may need to purge page cache to see changes (more->purge cache)-->
<!-- you can use {{My devices}} on your profile page to show table with all your devices -->

== How to enter flash mode ==

To start fastboot mode:
# boot into recovery by holding volume-down and power button at the same time, then
# <code>adb reboot bootloader</code>

To unlock bootloader in fastboot mode (CAUTION: this will erase userdata! Backup before doing this!): <code>fastboot oem unlock</code>

== Installation ==

My procedure was:
# Backup all important user data
# Unlock bootloader (see above)
# Install [https://forums.lenovo.com/t5/Lenovo-Android-based-Tablets-and/A2109-Updated-ClockworkMod-Recovery-for-Jelly-Bean/td-p/949575 CWM recovery] by going into fastboot mode and then running <code>fastboot flash recovery A2109_CWMrecovery-6.0.1.9d.img</code>
# Backup Android installation on SD card
# [[Installation_guide|Follow installation guide]] (note that flashing rootfs can take a few minutes without feedback, just wait)
# After flashing has finished, the screen should show the Medion logo and a notice saying "Cold booting linux"; after that, the postmarkedOS logo and then the demo should come up.

== Notes ==

Apparently, the device was manufactured by Lenovo for vendor Medion and is similar to Lenovo's A2110 / A2109 boards. Some information about the [https://thinkwiki.de/IdeaTab_A2109 IdeaTab A2109].

<!-- add more sections below as necessary, e.g. WiFi, photos, ... -->

== How bonsaiblue made wifi work ==

How bonsaiblue made wifi work (minus the confusing detours). [[Samsung_Galaxy_S_Advance_(samsung-i9070)#How_drebrez_made_wifi_work|Inspired by the very helpful How_drebrez_made_wifi_work]].

* Find information online about the wifi chip of the device: it uses Broadcom BCM4330 for wifi 11b/g/n and Bluetooth 3.0
* Read the [[WiFi]] page, in particular [[WiFi#Broadcom_WiFi|the part about Broadcom WiFi]].
* Since that page mentions kernel config parameters, grep for "BCM" in the devices kernel config:

    grep -i "BCM" pmaports/device/linux-medion-kai/config-medion-kai.armv7
    ...
    CONFIG_BCMDHD_FXN_FW_PATH="/system/vendor/firmware/bcm4330/fw_bcmdhd.bin"
    CONFIG_BCMDHD_FXN_NVRAM_PATH="/system/etc/nvram_4330.txt"
    CONFIG_BCMDHD_FXN_195_89=m
    ...

* So the wifi chip needs a kernel module (<code>CONFIG_BCMDHD_FXN_195_89=m</code>) and firmware and config files (<code>fw_bcmdhd.bin</code>, <code>nvram_4330.txt</code>).
* Download and unpack the vendor's OTA ROM zip (link in the [[Medion_Lifetab_S9714_(medion-kai)#See_also]] section). (Other ideas on how to find firmware files are on the [[How_to_find_device-specific_information#Firmware_files]] page.)
* In the unpacked ROM folder, look for <code>system/vendor/firmware/bcm4330/fw_bcmdhd.bin</code> and <code>system/etc/nvram_4330.txt</code>.
* '''FOR TESTING ONLY''' copy both files to <code>aports/device/device-medion-kai</code>. When done with testing, a firmware package should be created, see [[Device_specific_package#Proprietary_firmware_or_userland_blobs]].
* Edit <code>device/linux-medion-kai/APKBUILD</code> to get kernel modules built and installed:
** Increase <code>pkgrel</code> by one.
** At the end of the <code>build()</code> section, add this to build the modules:
    # the 'no-pic' flag is necessary to avoid the
    # error 'Unknown symbol _GLOBAL_OFFSET_TABLE_ (err 0)' when loading the module
    make ARCH="$_carch" CC="${CC:-gcc}" CFLAGS_MODULE="-fno-pic" \
        KBUILD_BUILD_VERSION="$((pkgrel + 1))-postmarketOS" modules
** At the end of the <code>package()</code> section, add this to install the modules:
    # Modules
    cd "$builddir"
    unset LDFLAGS
    make ARCH="$_carch" CC="${CC:-gcc}" \
        KBUILD_BUILD_VERSION="$((pkgrel + 1))-postmarketOS" \
        INSTALL_MOD_PATH="$pkgdir" INSTALL_MOD_STRIP=1 \
        modules_install

* Edit <code>device/linux-medion-kai/config-medion-kai.armv7</code> and set the path where the wifi firmware is expected to somewhere in <code>/lib/firmware/postmarketos</code>:

    CONFIG_BCMDHD_FXN_FW_PATH="/lib/firmware/postmarketos/bcm4330/fw_bcmdhd.bin"
    CONFIG_BCMDHD_FXN_NVRAM_PATH="/lib/firmware/postmarketos/bcm4330/nvram_4330.txt"

* Rebuild <code>linux-medion-kai</code> and create an image file:

    pmbootstrap checksum linux-medion-kai && \
    pmbootstrap kconfig check -f && \
    pmbootstrap build linux-medion-kai --force && \
    pmbootstrap install

* Chroot into the image file and check if modules have been built:

    pmbootstrap chroot -r
    
    find /lib/modules/
    
* In particular there should be <code>/lib/modules/3.1.10/kernel/drivers/net/wireless/bcmdhd_fxn_195_89/bcmdhd.ko</code>. Leave chroot again (with <code>exit</code>).

* In <code>device/device-medion-kai</code>, add a new file <code>modules-load.conf</code> and have the module found in the previous step loaded at boot time:

    # This file contains the names of kernel modules that should be loaded
    # at boot time, one per line. Lines beginning with "#" are ignored.
    # wifi module
    bcmdhd

* Edit <code>device/device-medion-kai/APKBUILD</code>
** Increase <code>pkgrel</code> by one.
** Add to source files and declare a new subpackage:

    subpackages="$pkgname-nonfree-firmware:nonfree_firmware"
    source="deviceinfo
        fw_bcmdhd.bin
        nvram_4330.txt"

** At the end of the <code>package()</code> section, add this to put <code>modules-load.conf</code> in the right place on the device:

    install -Dm644 "$srcdir"/modules-load.conf \
           "$pkgdir"/etc/modules-load.d/00-${pkgname}.conf

** Below the <code>package()</code> section, add a new <code>nonfree_firmware()</code> section that installs the files from the vendor ROM. Again, this is '''FOR TESTING ONLY'''. How a real firmware package is created is described in [[Device_specific_package#Proprietary_firmware_or_userland_blobs]].

    nonfree_firmware() {
           pkgdesc="Lenovo Medion Lifetab S9714 wifi firmware"
           mkdir "$subpkgdir"
           install -D -m644 "$srcdir"/nvram_4330.txt \
                   "$subpkgdir"/lib/firmware/postmarketos/bcm4330/nvram_4330.txt
           install -D -m644 "$srcdir"/fw_bcmdhd.bin \
                   "$subpkgdir"/lib/firmware/postmarketos/bcm4330/fw_bcmdhd.bin
    }
    
* Rebuild <code>device-medion-kai</code> and recreate the image file:

    pmbootstrap checksum device-medion-kai && \
    pmbootstrap build device-medion-kai --force && \
    pmbootstrap install

* Flash image to device    

    pmbootstrap flasher flash_rootfs && pmbootstrap flasher flash_kernel    

* ssh into the device via [[USB_Network]] and run lsmod to see if the kernel modules has been loaded correctly:

    $ lsmod
    Module                  Size  Used by
    bcmdhd                387306  0
    cfg80211              157302  1 bcmdhd

*If the module isn't listed, check that it's on the device (<code>find /lib/modules/ -iname "*bcm*ko"</code>) and what happens if you try to insert it manually (<code>modprobe bcmdhd || dmesg | tail -n 20</code>). If modprobe doesn't find the module you can also try <code>insmod /lib/modules/3.1.10/kernel/drivers/net/wireless/bcmdhd_fxn_195_89/bcmdhd.ko || dmesg | tail -n 20</code>.<br/>If dmesg gives <code>Unknown symbol _GLOBAL_OFFSET_TABLE_</code> you may be missing the <code>-fno-pic</code> flag when building the kernel modules.

* Once the module is loaded correctly, continue with the [[WiFi#Debugging|steps on the Wifi page]]:
** Check if the interface is available

    $ ip link
    ...
    7: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
        link/ether 00:11:22:33:44:55 brd ff:ff:ff:ff:ff:ff

** Scan for available wifis:

    nmcli device wifi list ifname wlan0

** Connect to your wifi:

    nmcli device wifi connect "$SSID" password "$PASSWORD" ifname wlan0


=== Related links ===

PCI id according to system/etc/nvram_4330.txt: <code>14e4:4360</code>

* [[Google_Nexus_7_2012_(asus-grouper)|asus-grouper has similar hardware but the kernel params are named slightly differently: CONFIG_BCMDHD_FW_PATH vs CONFIG_BCMDHD_FXN_FW_PATH]]
* [https://github.com/armbian/firmware/blob/master/brcm/brcmfmac4330-sdio.txt config file very similar to nvram_4330.txt]
* [https://android.googlesource.com/kernel/tegra/+/ecdcc0e36273de4fca8fcdc31bf011a01459cce1%5E!/ chromeos commit]
* [https://android.googlesource.com/kernel/tegra/+/b89174cf1a8cbe06951436a2ebe3e3b481de6f9f%5E!/ android commit]
*[https://wireless.wiki.kernel.org/en/users/drivers/b43 linux wireless drivers page - seems 14e4:4360 is NOT supported]

== See also ==

* [https://gitlab.com/postmarketOS/pmaports/tree/master/device/device-medion-kai Device package]
* [https://gitlab.com/postmarketOS/pmaports/tree/master/device/linux-medion-kai Kernel package]
* [https://github.com/red-black-bonsai/android_kernel_medion_lifetab_s9714 Vendor Android kernel sources in a GitHub repository]
* [https://forums.lenovo.com/t5/Lenovo-Android-based-Tablets-and/A2109-Updated-ClockworkMod-Recovery-for-Jelly-Bean/td-p/949575 CWM recovery is available here]
* [https://docs.google.com/open?id=0B1jde5rC0oQGOVRfVzNrY19SZWc Direct link for CWM for Jelly Bean / Android 4.1]
* [https://docs.google.com/open?id=0B1jde5rC0oQGWmJsYi1tLWViUWc Direct link for CWM for Ice Cream Sandwich / Android 4.0]

<!--
Link to related GitLab issues or merge requests like the following (replace CHANGEME with the ID, e.g. 1234):
* {{MR|CHANGEME|pmaports}} Initial merge request
* {{issue|CHANGEME|pmaports}} Some related issue
You can also add normal web links:
* [https://redmine.replicant.us/projects/replicant/wiki/GalaxyS2I9100 Replicant wiki page]
-->
