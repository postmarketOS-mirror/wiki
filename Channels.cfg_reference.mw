__NOTOC__
{{note|WIP spec related to basing on Alpine stable. See {{milestone|2}} for progress and a general introduction.}}

<code>channels.cfg</code> is in the master branch of [[pmaports.git]] and maps postmarketOS ''pmaports'' branches to Alpine Linux ''aports'' branches for each release channel.

=== Example ===

<source lang="ini">
# Reference: https://postmarketos.org/channels.cfg
[channels.cfg]
recommended=edge

[edge]
description=Rolling release channel
branch_pmaports=master
branch_aports=master

[latest]
description=Upcoming stable release (WIP, do not use!)
branch_pmaports=release/20.04
branch_aports=3.11-stable
</source>

=== Sections ===
==== channels.cfg ====
Metadata that does not belong in a channel section.

{| class="wikitable sortable"
!Variable
!Description
!Possibles values
|-
| <code>recommended</code>
| What pmbootstrap will recommend to install for new users. Initially this will be edge, until latest is ready, then we switch to latest.
| <code>edge</code>, <code>latest</code>
|}

==== edge, latest, latest-next, legacy ====
Channel sections, for which it will be possible to install postmarketOS. <code>edge</code> and <code>latest</code> will always be present, <code>latest-next</code> and <code>legacy</code> only during transition phases from one release to the next one.

{| class="wikitable sortable"
!Variable
!Description
!Possibles values
|-
| <code>description</code>
| Text displayed next to the branch in <code>pmbootstrap init</code>. May have hints that a branch is not meant to be used yet.
|
|-
| <code>branch_pmaports</code>
| Branch of postmarketOS pmaports.git
| <code>master</code>, <code>release/20.04</code>, ...
|-
| <code>branch_aports</code>
| Branch of Alpine Linux aports.git
| <code>master</code>, <code>3.11-stable</code>, ...
|}

=== Location ===
pmbootstrap reads the file from the master/origin branch of pmaports.git. This way, it will always use the latest fetched version, even if the last checked out master branch (master without the origin/ infront) is not up-to-date. This is likely to happen if a release branch was checked out, as a <code>git pull</code> would then only update the reference from the release branch related to origin's release branch, master's reference would not change.

Release branches do ''not'' have a copy of the file, this would just require us to needlessly keep them all in sync.

View it with:

<source lang="shell-session">
$ cd $(pmbootstrap config aports) # change directory to local checkout of pmaports.git
$ git show origin/master:channels.cfg
</source>

For development and testing, it is possible to override the path with <code>--config-channels</code>:

<source lang="shell-session">
$ pmbootstrap --config-channels /tmp/channels.cfg status
</source>

[[Category:Technical Reference]]
