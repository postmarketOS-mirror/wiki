== General information ==
To get wireless LAN working, most WiFi chips need a proprietary firmware blob. While it would be more secure to replace that with open source software in the long term, it isn't feasible right now, so we try to get it working with that closed source firmware.<br />
A great place to start looking for information about many available WiFi chips is [https://wireless.wiki.kernel.org/en/users/drivers this kernel.org page]. It often provides driver sources and the required firmware blobs as well. For a start if you want Internet working try the [[USB Internet]] guide.

== Android-specific ==
{{note|Instead of mounting Android's firmware partition, we package the files ourselves (see the [[FAQ#Why_don.27t_we_use_firmware_files_from_Android.27s_firmware_partition.3F|FAQ]]).}}

Requirements:
* [[How_to_find_device_specific_information#Firmware_files|WiFi firmware files]]
* Some firmwares need additional config files with calibration data, these can usually be found in the LineageOS or Google repositories.
* Make sure all files get installed properly (look at the packaging of other [[devices]] with working wifi in our <code>aports/device</code> folder)

=== Path to firmware ===
Usually your Android kernel expects the firmware files to be in a folder like <code>/system/vendor/firmware</code> and you need to patch the kernel and change the path to <code>/lib/firmware/postmarketos</code> (see [https://github.com/postmarketOS/pmbootstrap/blob/2fe8eb0fdfa37381d521844b6137c03593279002/aports/linux-samsung-i9070/04_change_dhd_firmware_dir.patch this patch]. Sometimes there is no need to patch, but simply change a kernel option that defines this path.

== Debugging ==
* Find the wifi device name with <code>ip link</code> (<code>wlan0</code> on most phones)
* Try to start the wlan interface with <code>ip link set wlan0 up</code>.

When that worked, you're done with this section. Otherwise look in the following places for errors (such as missing firmware files):
* <code>dmesg</code>
* <code>tail /var/log/firmwareload.log</code>

If there is nothing helpful in these files, continue reading. The original OS may run a userspace application, that enables the wifi driver by doing essentially <code>echo 1 > /dev/wcnss_wlan</code> and <code>echo sta > /sys/module/wlan/parameters/fwpath</code> or execute similar commands. This was the case for <code>wcnss-wlan</code> (see <code>aports/main/wcnss-wlan</code> for how we packaged it).

Try to [[Tuning sysfs|compare your sysfs]] and <code>dmesg</code> output with the one of a known working ROM after you have connected to a wireless network. Look for differences in <code>/sys/module/wlan/</code>.

== Connecting to APs ==
{{note|In {{github|388}} we enabled NetworkManager. You might need to set your wlan interface to unmanaged in NetworkManager to configure it manually.}}
postmarketOS currently configures the wpa_supplicant service to start on boot. This service will fail to start unless <code>/etc/wpa_supplicant/wpa_supplicant.conf</code> has been defined. This can be configured using the <code>wpa_passphrase</code> utility:

<pre>$ wpa_passphrase YOUR_SSID YOUR_PASSPHRASE | sudo tee /etc/wpa_supplicant/wpa_supplicant.conf
</pre>

Note: If you are connecting to a hidden wireless network, make sure to add line "scan_ssid=1" after the ssid line in your generated conf file

Next you'll need to set up the <code>networking</code> service by adding interfaces to <code>/etc/network/interfaces</code>. In some cases, the loopback device may need to precede the wlan interface:

<pre>auto lo 
iface lo inet loopback 
auto wlan0 
iface wlan0 inet dhcp</pre>
Finally, set the networking service to start on boot:

<pre>$ sudo rc-update add networking default</pre>
Note that on some systems (e.g. the RX51 [this seems not to be required on RX-51 as of 16th May 2018 but YMMV]) you may have to configure wpa_supplicant to use the Linux kernel wireless extensions by editing <code>/etc/conf.d/wpa_supplicant</code>:

<pre>wpa_supplicant_args=&quot;-Dwext&quot;</pre>
You will have to reboot, or manually restart the aforementioned services, before your device will connect to the access point.

=== Using NetworkManager command line ===

It is possible to use NetworkManager to connect to a wifi access point using nmcli or nmtui command line.

<pre>$ sudo nmcli device wifi list ifname wlan0 </pre>

<pre>$ sudo nmcli device wifi connect "$SSID" password "$PASSWORD" ifname wlan0</pre>

== Start WIFI manually ==
If you experience problems or just want to test wifi you can start wpa supplicant (using -Dwext or nl80211 driver) and the dhcp service:

<pre>
sudo wpa_supplicant -u -Dnl80211 -B -c /etc/wpa_supplicant/wpa_supplicant.conf -iwlan0
sudo udhcpc -i wlan0
</pre>

== See also ==
* [[Samsung_Galaxy_S_Advance_(samsung-i9070)#How_drebrez_made_wifi_work|samsung-i9070: How drebrez made wifi work]]

[[Category:Guide]]
