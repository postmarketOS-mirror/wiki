{{Infobox device
| manufacturer = Xiaomi
| name = Redmi Note 8T
| codename = xiaomi-willow
| image = File:CHANGE_ME_TO_DEVICE_CODENAME.jpg
| imagecaption = Redmi Note 8T
| releaseyear = 2019
| originalsoftware = Android 9, MIUI 10
| chipset = Qualcomm SDM665 Snapdragon 665 (11 nm)
| cpu = Octa-core (4x2.0 GHz Kryo 260 Gold & 4x1.8 GHz Kryo 260 Silver)
| gpu = Adreno 610
| storage = 32GB, 64GB, 128GB
| display = 1080 x 2340 IPS LCD
| memory = 3GB, 4GB, 4GB
| architecture = aarch64
| status_usbnet = P
| status_flashing = Y
| status_touch = Y
| status_screen = P
| status_wifi = N
| status_xwayland = Y
| status_fde =
| status_mainline = 
| status_battery = 
| status_3d = N
| status_accel =
| status_audio =
| status_bluetooth = 
| status_camera =
| status_gps =
| status_mobiledata =
| status_sms =
| status_calls =
| status = 
| booting = yes
| pmoskernel = 4.14.117
| whet_dhry = 4168.2
}}

== Contributors ==
* ''[[user:rjeli|Eli Riggs]]''

== Maintainer(s) ==
* ''[[user:rjeli|Eli Riggs]]''

== Users owning this device ==
{{Device owners}}
<!-- autogenerated, use {{Owns device|devicepage|notes}} on your profile page -->
<!-- use _ instead of spaces in device page name, e.g. {{Owns device|HTC_Desire_(htc-bravo)|custom notes}}-->
<!-- you may need to purge page cache to see changes (more->purge cache)-->
<!-- you can use {{My devices}} on your profile page to show table with all your devices -->

== Note ==

This device is quite similar to the [[Xiaomi Redmi Note 7 (xiaomi-lavender)]], and many of the issues were solved with steps from that device page, so if you're hacking on the 8T it's a good idea to read the xiaomi-lavender page closely.

== How to enter flash mode ==

=== Unlocking the bootloader ===

As with any Xiaomi device, in order to unlock the bootloader you need to sign up for a Mi Account, register your device through the MIUI Settings app (requires a working SIM inserted, but only for a few moments), and wait a week. The official Xiaomi tool only runs on Windows, but [https://www.xiaomitool.com/V2/ XiaoMiTool V2] worked for me on Debian Linux. Be careful, it's a closed source jar!

=== Before you go further ===

You are strongly recommended to install TWRP and back up ALL partitions to a safe place! (you can adb pull the images from twrp)

=== Entering recovery ===

Hold {{button|Volume Up}} + {{button|Power}} until you see the recovery screen.

=== Entering fastboot ===

Hold {{button|Volume Down}} + {{button|Power}} until you see the fastboot screen.

== Installation ==

* [[Installing pmbootstrap|Install pmbootstrap.]]
* <code>pmbootstrap -y zap; pmbootstrap init</code>, choose <code>xiaomi-willow</code> as your device
** firmware is currently needed for tianma touchscreen
** rndis doesn't work, and weston is currently the only working display server, so pick weston for ui if you want to know if the flash worked
* <code>pmbootstrap install</code>
* Enter fastboot, plug USB into computer
* <code>pmbootstrap flasher flash_kernel</code>
* <code>pmbootstrap flasher flash_rootfs</code>
* <code>pmbootstrap flasher flash_vbmeta</code>
* Reboot, sometimes <code>fastboot reboot</code> works, otherwise hold down {{button|Power}} until it reboots to system.
* Hopefully weston comes up with <code>postmarketos-demos</code>.

== Getting a shell ==

RNDIS doesn't work yet, not sure why. Could be an easy fix for someone more experienced with Qualcomm USB drivers.

=== (Easy) USB-C to Ethernet adapter ===

If you have a USB-C to Ethernet adapter with drivers already compiled into mainline, this will be easy. I had an [https://www.amazon.com/iTeknic-Adapter-Ethernet-Charging-ChromeBook/dp/B07QJXP3DV iTeknic IK-UC002] lying around, which has an <code>RTL8152</code> inside, merged into mainline a while ago and already included the downstream Kconfig. <code>device-xiaomi-willow</code> includes an interfaces file so that <code>eth0</code> is DHCPed at boot, and then <code>avahi-daemon</code> will advertise itself at <code>hostname.local</code>.

So if the phone is connected to your LAN at boot through the adapter, you should be able to <code>ssh user@xiaomi-willow.local</code> from your computer.

=== (Hard) UART ===

The test points are tiny.

* Disassemble the phone. [https://youtu.be/xWvFOEW-n1o Here]'s a decent video.
* I spent way too much time heating up the rubber and trying to use a suction cup. The glue is quite strong, and after heating up the edges to unreasonable temperatures I still couldn't pull the glass off with a suction cup. The key is to heat up the bottom a bit (around 100-150C) and use an extremely thin piece of metal to slide in the bottom and tear the rubber a bit. Then you can keep heating the edges and work your way around the perimeter.
* After removing the glass, remove the ~12ish green screws holding the upper panel in place. One is hidden under a sticker. Pop the panel off with more prying, as gently as you can but some force will be needed.
* This is the end of disassembly, the test points are now exposed.

Microscope shot of just the RX soldered (enough for debugging bootloader / earlycon)

[[File:Xiaomi-willow-uart-rx.jpeg]]

== See also ==
* {{MR|1197|pmaports}} Initial merge request
<!--
Link to related GitLab issues or merge requests like the following (replace CHANGEME with the ID, e.g. 1234):
* {{issue|CHANGEME|pmaports}} Some related issue
You can also add normal web links:
* [https://redmine.replicant.us/projects/replicant/wiki/GalaxyS2I9100 Replicant wiki page]
-->
<!--
If you manage to get your device packages merged, uncomment links below and change DEVICE_CODENAME with the actual one.
* [https://gitlab.com/postmarketOS/pmaports/tree/master/device/testing/device-DEVICE_CODENAME Device package]
* [https://gitlab.com/postmarketOS/pmaports/tree/master/device/testing/linux-DEVICE_CODENAME Kernel package]
-->
