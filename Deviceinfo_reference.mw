Most of the variables in <code>deviceinfo</code> have self-explanatory names and are used both when you are building postmarketOS and during runtime (it is available at <code>/etc/deviceinfo</code>).

All variables start with <code>deviceinfo_</code> in the file - this is omitted here to save space.

== device ==

{| class="wikitable sortable"
!Variable
!Description
!Possibles values
|-
| <code>format_version</code>
| Used to distinguish between different versions of this file.
| <code>0</code>
|-
| <code>name</code>
| Device model (e.g. <code>Google Nexus 5</code>)
|

|-
| <code>manufacturer</code>
| Device manufacturer (e.g. <code>LG</code>)
|

|-
| <code>codename</code>
| Device codename (e.g. <code>lg-hammerhead</code>)
|

|-
| <code>date</code>
| Release date of the device
|

|-
| <code>keyboard</code>
| The device has a hardware keyboard.
| <code>true</code>, <code>false</code>
|-
| <code>nonfree</code>
| Components of the device, that only run with closed source firmware. We have to do more research on this topic and specify a list of possible values, for now all devices have <code>????</code> here.
| <code>????</code>
|-
| <code>dtb</code>
| Name of the [[Glossary#dtb|device tree blob]] file. This will be necessary for the [[Mainline kernel]]; see also [https://github.com/postmarketOS/pmbootstrap/issues/91 #91]. This can be left blank during initial porting.
|

|-
| <code>modules_initfs</code>
| Kernel modules to include in the initramfs image. Note: modules to be loaded ''after'' the initramfs can be specified like in a <code>modules-load.conf</code> ([https://github.com/postmarketOS/pmbootstrap/tree/master/aports/device/device-samsung-i9070 example]).
|

|-
| <code>external_storage</code>
| Does the device have an sdcard or other external storage medium?
| <code>true</code>, <code>false</code>
|-
| <code>flash_method</code>
| Method used to flash the device ([[deviceinfo_flash_methods |more info]])
|
|-
| <code>arch</code>
| Device architecture, must be supported by Alpine Linux
| <code>armhf</code>, <code>armv7</code>, <code>aarch64</code>

|-
| <code>dev_touchscreen</code>
| Path to the touchscreen device (needed for initramfs on-screen-keyboard, [[deviceinfo_dev_touchscreen|more info]])
| e.g. <code>/dev/input/event3</code>
|-
| <code>dev_touchscreen_calibration</code>
| Touchscreen calibration values (only necessary for devices with resistive touchscreen, [[Screen_Calibration#weston-calibrator_.28needed_for_resistive_touch_screens.29|more info]])
| e.g. <code>1.094563 -0.020949 -34.586121 0.009427 -1.148506 503.816956</code>
|-
| <code>dev_keyboard</code>
| Path to the keyboard device, if your device has any (needed for initramfs password unlocking)
| e.g. <code>/dev/input/event1</code> 
|-
| <code>swap_size_recommended</code>
| Set recommended swap file size for device. If unset, no swap file will be created for the device.
| Integer, in MB.
|-
| <code>disable_dhcpd</code>
| Do not set the static ip to the network interface and do not run the DHCP daemon on it. This makes sense for devices with an ethernet port, like the Raspberry Pi ({{github|1580}}).
| <code>true</code>, <code>false</code>
|-
| <code>no_framebuffer</code>
| Do not wait up to 10 seconds until a framebuffer device shows up and do not try to configure it ({{MR|44|pmaports}}).
| <code>true</code>, <code>false</code>
|}

== flash ==

These are used for flashing and booting the device, and most of them are fastboot specific. '''[[How to find device specific information|Here is a guide on how to get these values for a specific Android device (by extracting the <code>boot.img</code>)]]'''

{|  class="wikitable sortable"
! Variable
! Description
! Possible values
|-
| <code>flash_offset_kernel</code>
| Kernel offset used for flashing
|

|-
| <code>flash_offset_ramdisk</code>
| Ramdisk offset used for flashing
|

|-
| <code>flash_offset_second</code>
| Used for flashing
|

|-
| <code>flash_offset_tags</code>
| Used for flashing
|

|-
| <code>flash_offset_base</code>
| Used for flashing
| default: <code>0x10000000</code>
|-
| <code>flash_pagesize</code>
| Page size
| usually <code>2048</code>
|-
| <code>flash_sparse</code>
| Set this to true if your device expects a [https://github.com/postmarketOS/pmbootstrap/wiki/Troubleshooting#invalid-sparse-file-format-at-header-magi sparse system image] flashed
|
|-
| <code>flash_fastboot_vendor_id</code>
| Set this to your vendor id if fastboot requires the <code>-i</code> argument to work on your device
|

|-
| <code>flash_fastboot_max_size</code>
| Set this if the fastboot required by your device has an upper limit to the size of system images it will flash.
| Size, in MB
|-
| <code>kernel_cmdline</code>
| Kernel command line
|

|-
| <code>bootimg_blobpack</code>
| Create a flashable blob for the ASUS TF101 from <code>boot.img</code> using [https://github.com/AndroidRoot/BlobTools BlobTools]
| <code>true, false</code>
|-

|-
| <code>bootimg_mtk_mkimage</code>
| Prepend a header required for MediaTek MT6589 phones (such as the [[Fairphone_1_(fairphone-fp1)|Fairphone 1]], [http://rex-shen.net/customize-flash-mt6589-rom/ more info])
| <code>true, false</code>
|-

|-
| <code>bootimg_qcdt</code>
| Append <code>dtb</code> file to <code>boot.img</code> ([[deviceinfo_bootimg_qcdt|more info]])
| <code>true, false</code>
|-

|-
| <code>generate_bootimg</code>
| Set this to true for fastboot device, so the <code>mkinitfs</code> command will generate a <code>boot.img</code> file after creating the <code>initfs</code>. Add <code>mkbootimg</code> as dependency to your device's APKBUILD!
| <code>true, false</code>
|-

| <code>generate_legacy_uboot_initfs</code>
| For the [https://github.com/postmarketOS/pmbootstrap/wiki/nokia-rx51-%28Nokia-N900%29 N900], we use a legacy version of the [https://en.wikipedia.org/wiki/Das_U-Boot uboot] bootloader right now. When setting this variable to true, the initramfs will generate an uboot legacy compatible initramfs file. Modern versions of uboot can load regular initramfs files.
| <code>true, false</code>

|-
| <code>fastboot_partition_kernel</code>
| Only relevant for [[Deviceinfo_flash_methods|fastboot]] flash methods, the partition where the kernel or boot.img will be stored ({{MR|1741}}).
| default: <code>"boot"</code>
|-
| <code>fastboot_partition_system</code>
| Only relevant for [[Deviceinfo_flash_methods|fastboot]] flash methods, the partition where the system image will be stored (see also: [[partition-layout]]).
| default: <code>"system"</code>
|-
| <code>heimdall_partition_kernel</code>
| Only relevant for [[Deviceinfo_flash_methods|heimdall]] flash methods, the partition where the kernel or boot.img will be stored.
| default: <code>"KERNEL"</code>
|-
| <code>heimdall_partition_initfs</code>
| Only relevant for the [[Deviceinfo_flash_methods#heimdall-isorec|heimdall-isorec]] flash method, the partition where the initramfs will be stored.
| default: <code>"RECOVERY"</code>
|-
| <code>heimdall_partition_system</code>
| Only relevant for [[Deviceinfo_flash_methods|heimdall]] flash methods, the partition where the system image will be stored (see also: [[partition-layout]]).
| default: <code>"SYSTEM"</code>
|-
| <code>boot_filesystem</code>
| Sets the filesystem used for the /boot partition containing initramfs-extra
| default: <code>"ext4"</code>, <code>"fat16"</code>
|-
| <code>rootfs_image_sector_size</code>
| Some devices made after 2016 with UFS storage use 4096 byte sectors and therefore need this option to boot. Read {{MR|1725}} for details.
| default: <code>512</code>
|-
| <code>sd_embed_firmware</code>
| A comma-separated list of binary:offset (where binary is under /usr/share) ({{MR|1739}})
| e.g. <code>firmware/librem5dev/u-boot.bin:33,firmware/librem5dev/m4.bin:2</code>
|-
| <code>sd_embed_firmware_step_size</code>
| The number of bytes for each increment of the offset specified in the <code>sd_embed_firmware</code> 
| default: <code>1024</code>
|-
|}

== splash ==

{| class="wikitable sortable"
! Variable
! Description
! Possibles values
|-
| <code>screen_width</code>
| The width of the display
| 800, 720, 1440... anything really
|-
| <code>screen_height</code>
| The height of the display
| 1280, 2560... other
|}

== Obsolete Options ==

=== weston ===
* <code>weston_pixman_type</code>: used to be a Weston specific workaround for the "red screen bug" ({{github|54}}): we patched Weston to accept a <code>--pixman-type</code> argument to override the framebuffer mode that the kernel driver reports. However, this patch was quickly incompatible with future changes in Weston, and it is not as good as [[Troubleshooting:display#My_screen_is_red.21|patching the kernel to report the right framebuffer mode]], so it was removed ({{issue|136|pmaports}}).
* Various options from [https://manpages.debian.org/unstable/weston/weston.ini.5.en.html weston.ini] used to be duplicated, but this was removed in {{github|739}}. If you need to set weston specific options from your device (such as the output backend or the keymap), please add a weston.ini file to your pmaport ([https://github.com/postmarketOS/pmbootstrap/blob/e7dfe9b9041f0c2ec94295df16afeeec1d9bafd8/aports/device/device-nokia-rx51/APKBUILD#L66-L70 example]).

== See also ==
* [[Device specific package]]

[[Category:Technical Reference]]
