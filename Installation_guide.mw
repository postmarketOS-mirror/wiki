=== Introduction ===
If you own a device which has been ported to postmarketOS, then this page will help you to obtain, build, and install postmarketOS to this device.

Any commands that are expected to be entered into a terminal are prefixed with <code>$</code>. You should not enter that character, it is merely to designate that the following commands are intended to be input/executed within a terminal. For example, the following command to list contents of the current working directory, <code>ls</code>, will be mentioned on this page as:

<syntaxhighlight lang="shell-session">
$ ls
</syntaxhighlight>

=== Requirements ===
* We assume, that you are using Linux. If you don't have Linux installed, please [http://www.brianlinkletter.com/installing-debian-linux-in-a-virtualbox-virtual-machine/ set up a virtual machine with VirtualBox] first.
* Python 3.4+ and git must be installed (look at your distribution's documentation on installing packages)
* A few gigabytes of free space

=== Initialization ===
Run the following commands in a Linux terminal to get started.

<syntaxhighlight lang="shell-session">
$ git clone https://github.com/postmarketOS/pmbootstrap
$ cd pmbootstrap
$ ./pmbootstrap.py init
</syntaxhighlight>

Type in the code name of your device as listed [[Devices|here]] and optionally a custom username.
<pre>
Target device (either an existing one, or a new one for porting).
Available (39): amazon-thor, asus-flo, asus-grouper, fairphone-fp2, google-glass, ...
Device [samsung-i9100]: samsung-i9070
Username [user]: yourusernamegoeshere
</pre>

==== User interface ====
Carefully choose the user interface you would like to install. Check your [[devices|device's wiki page]] for interfaces, that are known to be working with your device. Weston and XFCE4 are usable on devices which do not have hardware 3D acceleration (most of them!), the others are notably slowed down. Please read the corresponding [[User-Interfaces|user interface]] article for information about how usable each interface is and keep in mind that most of them are not that usable yet.
<pre>
Available user interfaces (5):
* none: No graphical environment
* hildon: (X11) Lightweight GTK+2 UI (optimized for single-touch touchscreens)
* luna: (Wayland) webOS UI, ported from the LuneOS project (Not working yet)
* plasma-mobile: (Wayland) Mobile variant of KDE Plasma, optimized for touchscreen
* weston: (Wayland) Reference compositor (demo, not a phone interface)
* xfce4: (X11) Lightweight GTK+2 desktop (stylus recommended)
User interface [weston]:
</pre>

==== Work path ====
Make sure that the location has a few GB of space available, and that it is a relatively standard Linux filesystem (so it supports device nodes and symbolic links). Notably ''unsupported'' are: eCryptFS, encfs, fat, ntfs, nfs shares, tmpvs, VirtualBox shared folders.
<pre>
Location of the 'work' path. Multiple chroots (native, device arch, device rootfs) will be created in there.
Work path [/home/user/.local/var/pmbootstrap]:
</pre>

==== More questions ====
Unless you know that you want to change something, it's fine to anwer with the defaults here by just pressing the <code>return</code> key.
<pre>
Build options: Parallel jobs: 3, ccache per arch: 5G, timestamp based rebuilds: True
Change them? (y/n) [n]:
Additional packages that will be installed to rootfs. Specify them in a comma separated list (e.g.: vim,file) or "none"
Extra packages [none]:
Your host timezone: Europe/London
Use this timezone instead of GMT? (y/n) [y]:
WARNING: The applications in the chroots do not get updated automatically.
Run 'pmbootstrap zap' to delete all chroots once a day before working with pmbootstrap!
It only takes a few seconds, and all packages are cached.
Done!
</pre>

=== Installation and flashing ===
{{note|We assume that you have a [[Porting_to_a_new_device#Shortcut|shortcut]] for <code>pmbootstrap</code> set up, that points to <code>./pmbootstrap.py</code>.}}
{{note|Not all installation and flash methods work for all devices. '''Please check your [[devices|device wiki page]] for further instructions!''' Below you will find generic explanations of what the <code>install</code> and <code>flash</code> actions do, just in case the installation instructions are missing for your device. If that is the case, please extend the wiki accordingly.}}

==== pmbootstrap install ====
The install action essentially does the following:
* build a chroot with the full installation as it will be placed on the device
* copy that to an encrypted system image file
* ask you for the user and encryption passwords

It is possible to disable the full disk encryption (FDE) with the <code>--no-fde</code> parameter (it might be that the FDE interface [[osk-sdl]] has not been ported to your device yet).

Furthermore you can change the output type (system image) to something else with the following parameters.
* <code>--sdcard</code>: Format and copy everything to an SD card
* <code>--android-recovery-zip</code>: Create a zip file, that can be used with TWRP, CWM or other Android recovery systems.

Example commands (only using one at a time makes sense):
<syntaxhighlight lang="shell-session">
$ pmbootstrap install
$ pmbootstrap install --no-fde --sdcard=/dev/mmcblk
$ pmbootstrap install --android-recovery-zip
$ pmbootstrap install --help
</syntaxhighlight>

==== pmbootstrap flash ====
This command wraps various flash programs (e.g. fastboot and heimdall) with a common syntax and with automatically filling out the paths to the generated files. Usually you need to flash the system image (unless you did the SD card or recovery zip installation):

<syntaxhighlight lang="shell-session">
$ pmbootstrap flasher flash_system
</syntaxhighlight>

And then you need to boot or flash the kernel (so run only one of the commands). Again, this is not necessary when you have used the recovery zip. But it is necessary in most cases with the SD card (unless the device can boot the kernel from the SD card like the N900).
<syntaxhighlight lang="shell-session">
$ pmbootstrap flasher boot
$ pmbootstrap flasher flash_kernel
</syntaxhighlight>

As with all <code>pmbootstrap</code> commands, you can check the help pages for details:
<syntaxhighlight lang="shell-session">
$ pmbootstrap flasher --help
$ pmbootstrap flasher flash_system --help
</syntaxhighlight>

See also: [[Porting_to_a_new_device#Alternatives_to_regular_flashing|Alternatives to regular flashing]]
