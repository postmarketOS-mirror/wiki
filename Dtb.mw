The device tree blob (or binary) is a file containing information about the board and its hardware.


== Why is it needed? ==
Most embedded platforms do not provide a way of discovering the hardware they have. You either have to resort to guesswork (which is not viable), or provide the Linux kernel with information about the board and the peripherals.

Before the dtb was introduced, each board needed a kernel specifically compiled for them, which was hardcoded to use the peripherals. With the dtb, a single kernel can run on multiple devices, if it is given the right dtb at boot time.

== How is it created? ==
The dtb is created from device tree source (dts) files. Those contain the hardware description in a readable format. The dtb format merely exists to make loading them simpler for the kernel. As such, dts can be converted to and from dtb with a device tree compiler, '''dtc''', which is available on most linux distributions.

== How is it used? ==
The dtb is loaded in memory by the bootloader (often uboot) before the kernel is started.

Some older versions of uboot do not support loading a separate dtb file, which means that the dtb has to be embedded in the kernel zImage.

=== QCDT ===
Some Qualcomm devices also use the [[QCDT]] format, where the dtb is appended to the end of the filesystem ([[Glossary#boot.img|boot.img]]) instead of the zImage.

== Where can I find a dts for my device? ==
Those are generally present in the kernel fork your device uses. Look in the <code>boards/</code> directory, or in <code>arch/your_device_arch/boot/dts</code>.
When a board is mainlined, the corresponding dts file is mainlined as well (though those may be put in a separate repository in the future).

== See also ==
[[Dtbtool]], a tool to compile dtb in the [[qcdt]] format.

== Links ==

[http://www.informit.com/articles/article.aspx?p=1647051&seqNum=5]
