{{Infobox device
| manufacturer = QEMU
| name =  N900
| codename = qemu-rx51
| architecture = armhf
| n-android = âœ”
| status_usbnet = 
| status_flashing = 
| status_touch = 
| status_screen = 
| status_wifi = 
| status_xwayland = 
| status_fde = 
| status_mainline = 
| status_battery =
| status_3d = 
| status_accel = 
| status_audio = 
| status_bluetooth =
| status_camera =
| status_gps = 
| status_mobiledata = 
| status_sms = 
| status_calls =
| status = 
| booting = no
}}

With 4.6 kernel, [https://github.com/pali/linux-n900/commit/eb080ecdcfc5868d8e36d0f5f42d9cb7f13b4db9 Pali's patch to mmc] and right config with command line inside, qemu works for N900 emulation, including running Weston.

I'm using this config option to configure kernel:

 CONFIG_CMDLINE="console=ttyO2,115200 console=tty root=/dev/mmcblk1p2 rootdelay=5 no-omap-wd no-ext-wd console=tty0 nokia-modem.pm=1 1 single"

And this script to prepare image / run it:

<syntaxhighlight lang="python">
#!/usr/bin/python

import os
import time

def cmd(f):
    os.system(f)

class Run:
    def __init__(m):
        m.qemudir = "/data/l/maemo/qemu/"
        m.pmb_tmp = "/data/tmp/pmbootstrap"
        m.boot = m.pmb_tmp+"/chroot_rootfs_nokia-rx51/boot/"
        
    def run(m):
        # kernel = m.boot+"vmlinuz-postmarketos-dtb"
        kernel = "/data/l/linux-n900/arch/arm/boot/zImage-dtb"
        cmd("%s/qflasher -m rx51 -x %s/xloader-qemu.bin -s %s/secondary-qemu.bin -k %s -o n900.img -p k=16072" %
            (m.qemudir, m.qemudir, m.qemudir, kernel))

        #time.sleep(10)
        os.system("%s/qemu-system-arm -s -M n900 -mtdblock n900.img -sd /data/tmp/pmos.img -serial stdio -clock unix -redir tcp:5555:10.0.2.15:22" %
                  m.qemudir)

r = Run()
r.run()
</syntaxhighlight>

Special qemu version with n900 support is likely needed.
