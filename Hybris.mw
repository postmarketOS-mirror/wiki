[https://en.wikipedia.org/wiki/Hybris_(software) Libhybris] allows devices lacking FLOSS drivers to make full use of their hardware by using the proprietary drivers from Android. Mainlining and using free software drivers is of course the better approach, but it is not possible for all devices. '''We will not list devices that need hybris as featured devices''' (see {{issue|83|postmarketos.org}}).

== Using libhybris with your device ==

=== libhybris current usage ===
It is used for the [[Planet_Computers_Gemini_PDA_(planet-geminipda)|Gemini PDA]] (non-CAF) and [[Samsung_Galaxy_S4_Mini_dual_sim|Samsung s4 mini duos]] (CAF) device ports.

=== Android system image ===

First thing to do is convert the halium generated '''system.img''' to a mountable image (basically what the [https://github.com/Halium/halium-scripts/blob/master/halium-install#L41-L52 halium install script] does)
and the new '''system.img''' to the device, to <code>/var/lib/lxc/android/system.img</code>

The way to do attain this, is:
* Port halium (https://docs.halium.org , https://halium.org) to your device. This may take considerable effort.
* Get it running to a point where you have at least graphics operational
* It works if you run the same kernel source for both, and apply all defconfig changes needed for the halium port to your postmarketos port
* Boot your halium-running device into android recovery, and download the <code>/data/system.img</code> file from it. This is the systemimage you've built for halium, with the modifications that the installation script has done.
* Flash postmarketOS to your device
* Upload the system.img file to <code>/var/lib/lxc/android/system.img</code>

=== Install the hybris related packages ===

<syntaxhighlight lang="shell-session">
$ sudo apk add lxc-android \
               xf86-video-hwcomposer \
               libhybris \
               libhybris-egl \
               libhybris-gles \
               libhybris-libwayland-egl \
               wayland-libs-client \
               wayland-libs-server
</syntaxhighlight>

Depending if you need software which is built for Code Aurora Forum’s Android for MSM (generally nicknamed “CAF” for short):
<syntaxhighlight lang="shell-session">
$ sudo apk add libhybris-7.1-caf \
               xf86-video-hwcomposer-7.1-caf               
</syntaxhighlight>

For all the other devices:
<syntaxhighlight lang="shell-session">
$ sudo apk add libhybris-7.1 \
               xf86-video-hwcomposer-7.1               
</syntaxhighlight>

=== Start the android container ===
<syntaxhighlight lang="shell-session">
$ sudo rc-service lxc-android start
</syntaxhighlight>

=== Configure Xorg ===

You need to create the <code>/etc/X11/xorg.conf.d/10-<device>.conf</code> with the following:
<syntaxhighlight>
Section "Device"
  Identifier "Card0"
  Driver "hwcomposer"
EndSection
</syntaxhighlight>

=== Run hardware composer test (to verify it all works) ===
For a CAF device, use this command:
<syntaxhighlight lang="shell-session">
$ EGL_PLATFORM=hwcomposer test_hwcomposer_7_caf
</syntaxhighlight>

For a non-CAF device, use this command:
<syntaxhighlight lang="shell-session">
$ EGL_PLATFORM=hwcomposer test_hwcomposer
</syntaxhighlight>

== See also ==
* {{github|1402}} Package libhybris
* [[Motorola_Droid_4_(motorola-maserati)|Droid 4]]: the device for which NotKit originally made the libhybris support
* [[Planet_Computers_Gemini_PDA_(planet-geminipda)|Gemini PDA]]: NotKit also made it work with libhybris
* [https://postmarketos.org/blog/2018/06/09/one-year/#libhybris-and-optional-proprietary-components One year of postmarketOS: libhybris and optional proprietary components]
* [https://postmarketos.org/blog/2017/12/31/219-days-of-postmarketOS/#libre-drivers-and-libhybris 219 days of postmarketOS: libre drivers and libhybris]


[[Category:Technical Reference]]
